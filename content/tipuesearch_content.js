var tipuesearch = {"pages": [{'title': '簡介', 'text': '本網頁為107學年度第二學期五專部主要開發網頁 \n 頁面資源介紹、CMSimfly網頁簡介、網際內容管理課程簡介會在分支內介紹 \n 嵌入小程式(繪圖、亂數產生系統)會在 程式 頁面進行介紹 \n 老師教學內容(w1~w16)會在 網際內容管理課程內容 分支進行介紹 \n 期中報告 及 期末報告 則會另外編輯頁面介紹', 'tags': '', 'url': '簡介.html'}, {'title': '已知錯誤', 'text': '全部頁面會因無法正確解讀而誤刪 \n 在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理. \n 可利用指令git reset --hard HEAD將網頁回復到最新的版本。 \n 頁面標題不支援特殊符號 \n 各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能. \n Video 引用不支援內部引用 \n tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結. \n', 'tags': '', 'url': '已知錯誤.html'}, {'title': '頁面資源介紹', 'text': '分支網頁將會介紹本網頁所使用相關結構、程式碼、編輯.......等相關資訊 \n', 'tags': '', 'url': '頁面資源介紹.html'}, {'title': '目錄結構', 'text': 'CMSimfly 的動態系統採用 Python3 + Flask 建構, 並且利用 Beatifulsoup 解讀位於 contig 目錄中的 content.htm 超文件檔案. \n content.htm 檔案可以透過動態系統中的 generate_pages 功能, 將超文件轉為位於 content 目錄中的個別頁面檔案. \n 動態系統與靜態系統則共用 downloads, images, static 等目錄, 其中 downloads 目錄存放在動態系統上傳的文件檔, 而 images 目錄則存放動態系統所上傳的影像檔案, 包括 jpg, png 與 gif 等格式圖檔. \n static 目錄則存放在動態與靜態系統所需要的 Javascript 或 Brython 程式檔. \n', 'tags': '', 'url': '目錄結構.html'}, {'title': '頁面編輯', 'text': 'CMSimfly 動態系統的網際編輯器採用  TinyMCE4 , 可以放入一般超文件,\xa0 納入圖檔, 嵌入影片連結, 並且加入帶有行數的原始碼. \n 透過 File Upload 功能, 可以一次上傳多個檔案,\xa0 存入 downloads 目錄中儲存, 之後各頁面可以引入對應連結. \n 而圖檔的上傳與引用與一般檔案類似, 但上傳後存入 images 目錄中. \n', 'tags': '', 'url': '頁面編輯.html'}, {'title': '插入程式碼', 'text': 'CMSimfly 目前使用 Syntaxhighlighter 3.0.83: \n \xa0 http://alexgorbatchev.com/SyntaxHighlighter/ \xa0 \n 進行頁面中的程式碼高亮顯示. \n Java 程式碼 \n import java.util.Scanner;\n\npublic class Life {\n    public static void show(boolean[][] grid){\n        String s = "";\n        for(boolean[] row : grid){\n            for(boolean val : row)\n                if(val)\n                    s += "*";\n                else\n                    s += ".";\n            s += "\\n";\n        }\n        System.out.println(s);\n    }\n    \n    public static boolean[][] gen(){\n        boolean[][] grid = new boolean[10][10];\n        for(int r = 0; r < 10; r++)\n            for(int c = 0; c < 10; c++)\n                if( Math.random() > 0.7 )\n                    grid[r][c] = true;\n        return grid;\n    }\n    \n    public static void main(String[] args){\n        boolean[][] world = gen();\n        show(world);\n        System.out.println();\n        world = nextGen(world);\n        show(world);\n        Scanner s = new Scanner(System.in);\n        while(s.nextLine().length() == 0){\n            System.out.println();\n            world = nextGen(world);\n            show(world);\n            \n        }\n    }\n    \n    public static boolean[][] nextGen(boolean[][] world){\n        boolean[][] newWorld \n            = new boolean[world.length][world[0].length];\n        int num;\n        for(int r = 0; r < world.length; r++){\n            for(int c = 0; c < world[0].length; c++){\n                num = numNeighbors(world, r, c);\n                if( occupiedNext(num, world[r][c]) )\n                    newWorld[r][c] = true;\n            }\n        }\n        return newWorld;\n    }\n    \n    public static boolean occupiedNext(int numNeighbors, boolean occupied){\n        if( occupied && (numNeighbors == 2 || numNeighbors == 3))\n            return true;\n        else if (!occupied && numNeighbors == 3)\n            return true;\n        else\n            return false;\n    }\n\n    private static int numNeighbors(boolean[][] world, int row, int col) {\n        int num = world[row][col] ? -1 : 0;\n        for(int r = row - 1; r <= row + 1; r++)\n            for(int c = col - 1; c <= col + 1; c++)\n                if( inbounds(world, r, c) && world[r][c] )\n                    num++;\n\n        return num;\n    }\n\n    private static boolean inbounds(boolean[][] world, int r, int c) {\n        return r >= 0 && r < world.length && c >= 0 &&\n        c < world[0].length;\n    }\n\n} \n \n Python 程式碼 \n def parse_content():\n    """use bs4 and re module functions to parse content.htm"""\n    #from pybean import Store, SQLiteWriter\n    # if no content.db, create database file with cms table\n    \'\'\'\n    if not os.path.isfile(config_dir+"content.db"):\n        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))\n        cms = library.new("cms")\n        cms.follow = 0\n        cms.title = "head 1"\n        cms.content = "content 1"\n        cms.memo = "first memo"\n        library.save(cms)\n        library.commit()\n    \'\'\'\n    # if no content.htm, generate a head 1 and content 1 file\n    if not os.path.isfile(config_dir+"content.htm"):\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n    subject = file_get_contents(config_dir+"content.htm")\n    # deal with content without content\n    if subject == "":\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n        subject = "<h1>head 1</h1>content 1"\n    # initialize the return lists\n    head_list = []\n    level_list = []\n    page_list = []\n    # make the soup out of the html content\n    soup = bs4.BeautifulSoup(subject, \'html.parser\')\n    # 嘗試解讀各種情況下的標題\n    soup = _remove_h123_attrs(soup)\n    # 改寫 content.htm 後重新取 subject\n    with open(config_dir + "content.htm", "wb") as f:\n        f.write(soup.encode("utf-8"))\n    subject = file_get_contents(config_dir+"content.htm")\n    # get all h1, h2, h3 tags into list\n    htag= soup.find_all([\'h1\', \'h2\', \'h3\'])\n    n = len(htag)\n    # get the page content to split subject using each h tag\n    temp_data = subject.split(str(htag[0]))\n    if len(temp_data) > 2:\n        subject = str(htag[0]).join(temp_data[1:])\n    else:\n        subject = temp_data[1]\n    if n >1:\n            # i from 1 to i-1\n            for i in range(1, len(htag)):\n                head_list.append(htag[i-1].text.strip())\n                # use name attribute of h* tag to get h1, h2 or h3\n                # the number of h1, h2 or h3 is the level of page menu\n                level_list.append(htag[i-1].name[1])\n                temp_data = subject.split(str(htag[i]))\n                if len(temp_data) > 2:\n                    subject = str(htag[i]).join(temp_data[1:])\n                else:\n                    subject = temp_data[1]\n                # cut the other page content out of htag from 1 to i-1\n                cut = temp_data[0]\n                # add the page content\n                page_list.append(cut)\n    # last i\n    # add the last page title\n    head_list.append(htag[n-1].text.strip())\n    # add the last level\n    level_list.append(htag[n-1].name[1])\n    temp_data = subject.split(str(htag[n-1]))\n    # the last subject\n    subject = temp_data[0]\n    # cut the last page content out\n    cut = temp_data[0]\n    # the last page content\n    page_list.append(cut)\n    return head_list, level_list, page_list\n\n \n \n C或C++程式碼 \n 請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為\xa0 "C/C++程式碼", 則無法進行分頁. \n /* Runge Kutta for a set of first order differential equations */\n \n#include <stdio.h>\n#include <math.h>\n \n#define N 2 /* number of first order equations */\n#define dist 0.1 /* stepsize in t*/\n#define MAX 30.0 /* max for t */\n \nFILE output; / internal filename */\nFILE output1; / internal filename */\n// 利用 pipe 呼叫 gnuplot 繪圖\nFILE *pipe;\n \nvoid runge4(double x, double y[], double step); /* Runge-Kutta function */\ndouble f(double x, double y[], int i); /* function for derivatives */\n \nvoid main(){\n \n  double t, y[N];\n  int j;\n \n  output=fopen("osc.dat", "w"); /* external filename */\n  output1=fopen("osc1.dat", "w"); /* external filename */\n \n  y[0]=1.0; /* initial position */\n  y[1]=0.0; /* initial velocity */\n \n  //fprintf(output, "0\\t%f\\n", y[0]);\n \n  for (j=1; j*dist<=MAX ;j++) /* time loop */{\n \n    t=j*dist;\n    runge4(t, y, dist);\n    fprintf(output, "%f\\t%f\\n", t, y[0]);\n    fprintf(output1, "%f\\t%f\\n", t, y[1]);\n  }\n \n  fclose(output);\n  fclose(output1);\n \n  pipe = popen("gnuplot -persist","w");\n  //fprintf(pipe,"set term png enhanced font \\"v:/fireflysung.ttf\\" 18 \\n");\n  fprintf(pipe,"set term png enhanced font \\"y:/wqy-microhei.ttc\\" 18 \\n");\n  //fprintf(pipe,"set yrange [68:70]\\n");\n  fprintf(pipe,"set output \\"test.png\\"\\n");\n  fprintf(pipe, "plot \\"osc.dat\\" title \\"位移\\" with lines, \\"osc1.dat\\" title \\"速度\\" with lines\\n");\n  fprintf(pipe,"quit\\n");\n\n  fprintf(pipe,"quit\\n");\n  pclose(pipe);\n}\n \nvoid runge4(double x, double y[], double step){\n \n  double h=step/2.0, /* the midpoint */\n  t1[N], t2[N], t3[N], /* temporary storage arrays */\n  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */\n  int i;\n \n  for (i=0;i<N;i++){\n \n    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    k4[i]= step*f(x+step, t3, i);\n  }\n \n  for (i=0;i<N;i++){\n \n    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;\n  }\n}\n \ndouble f(double x, double y[], int i){\n \n  if (i==0)\n    x=y[1]; /* derivative of first equation */\n  if (i==1)\n    x=-y[0]-0.5*y[1];\n  return x;\n} \n \n Lua 程式碼 \n -- 導入 js 模組\njs = require("js")\n-- 取得 window\nwindow = js.global\n-- 猜小於或等於 n 的整數\nbig = 100\n-- 計算猜測次數, 配合 while 至少會猜一次\nnum = 1\n-- 利用 window:prompt 方法回應取得使用者所猜的整數\nguess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")\n-- 利用數學模組的 random 函數以亂數產生答案\nanswer = math.random(big)\noutput = ""\n-- 若沒猜對, 一直猜到對為止\nwhile answer ~= tonumber(guess) do\n    if answer > tonumber(guess) then\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"\n        print(output)\n    else\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"\n        print(output)\n    end \n    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")\n    num = num + 1\nend\nprint("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")\n     \n \n Javascript 程式碼 \n STLViewer = function(stlpath, plotarea) {\n\n\tvar mycanvas = document.getElementById(plotarea);\n\tvar viewer = new JSC3D.Viewer(mycanvas)\n\tvar theScene = new JSC3D.Scene;\n\t////Initialize with a default file:\n\t//var stlpath = "../../../assets/2013-10-23/stl/box.STL"\n\t//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"\n\tviewer.setParameter(\'SceneUrl\', stlpath);\n    viewer.setParameter(\'InitRotationX\', 20);\n\tviewer.setParameter(\'InitRotationY\', 20);\n\tviewer.setParameter(\'InitRotationZ\', 0);\n\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\tviewer.init();\n\tviewer.update();\n\t////init done\n\tvar canvas_drop = document.getElementById(\'canvas-drop\')\n\t/*var dropzone = document.getElementById(\'dropzone\')\n\tdropzone.addEventListener(\'dragover\', handleDragOver, false);\n\tdropzone.addEventListener(\'drop\', handleFileSelect, false); */\n\tcanvas_drop.addEventListener(\'dragover\', handleDragOver, false);\n\tcanvas_drop.addEventListener(\'drop\', handleFileSelect, false);\n\n////Drag and drop logic:\n\tfunction handleFileSelect(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    var files = evt.dataTransfer.files;\n\t    console.log(evt)\n\t    console.log(files)\n\t    preview_stl(files[0])\n\t  }\n\n\t  function handleDragOver(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    evt.dataTransfer.dropEffect = \'copy\';\n\t  }\n\n////jsc3d logic\n\tvar handle_file_select = function(e) {\n\t\te.stopPropagation()\n\t\te.preventDefault()\n\t\tvar f = e.target.files[0]\n\t\tpreview_stl(f)\n\t}\n\n\tfunction preview_stl(f) {\n\t\tvar reader = new FileReader()\n\t\tvar ext = f.name.split(".")[1]\n\n\t\tfunction setup_viewer() {\n\t\t\tviewer.setParameter(\'InitRotationX\', 20);\n\t\t\tviewer.setParameter(\'InitRotationY\', 20);\n\t\t\tviewer.setParameter(\'InitRotationZ\', 0);\n\t\t\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\t\t\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\t\t\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\t\t\tviewer.setParameter(\'RenderMode\', "flat");\n\t\t}\n\t\tsetup_viewer()\n\n\t\treader.onload = (function(file) {\n\t\t\treturn function(e) {\n\t\t\t\ttheScene = new JSC3D.Scene\n\t\t    \tstl_loader = new JSC3D.StlLoader()\n\t\t    \tstl_loader.parseStl(theScene, e.target.result)\n\t\t      \t//viewer.init()\n\t\t      \tviewer.replaceScene(theScene)\n\t\t      \tviewer.update()\n\t\t      \tconsole.log("file reader onload")\n\t\t\t}\n\t\t})(f)\n\n\t\tif (ext.toLowerCase() != "stl") {\n\t\t\talert("That doesn\'t appear to be an STL file.");\n\t\t} else {\n\t\t\treader.readAsBinaryString(f)\n\t\t}\n\t}\n}\n \n \n Html 原始碼 \n <html>\n   <head>\n      <meta http-equiv="content-type" content="text/html;charset=utf-8">\n      <title>CMSimfly</title>\n      <link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n   </head>\n   <body>\n      <div class=\'container\'>\n      <nav>\n         <ul id=\'css3menu1\' class=\'topmenu\'>\n            <li><a href=\'/get_page/簡介\'>簡介</a>\n            <li><a href=\'/get_page/目錄結構\'>目錄結構</a>\n            <li>\n               <a href=\'/get_page/頁面編輯\'>頁面編輯</a>\n               <ul>\n                  <li>\n                     <a href=\'/get_page/插入程式碼\'>插入程式碼</a>\n                     <ul>\n                        <li><a href=\'/get_page/Java 程式碼\'>Java 程式碼</a>\n                        <li><a href=\'/get_page/Python 程式碼\'>Python 程式碼</a>\n                        <li><a href=\'/get_page/C或C++程式碼\'>C或C++程式碼</a>\n                        <li><a href=\'/get_page/Lua 程式碼\'>Lua 程式碼</a>\n                        <li><a href=\'/get_page/Javascript 程式碼\'>Javascript 程式碼</a>\n                        <li><a href=\'/get_page/Html 原始碼\'>Html 原始碼</a></li>\n                        </li>\n                     </ul>\n               </ul>\n            <li><a href=\'/get_page/網際簡報\'>網際簡報</a>\n            <li><a href=\'/get_page/網誌編輯\'>網誌編輯</a>\n            <li><a href=\'/get_page/已知錯誤\'>已知錯誤</a></li>\n         </ul>\n      </nav>\n      <section>\n         <form method=\'post\' action=\'/ssavePage\'>\n         <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'><h3>Html 原始碼</h3></textarea>\n         <input type=\'hidden\' name=\'page_order\' value=\'9\'>\n         <input type=\'submit\' value=\'save\'>\n         <input type=button onClick="location.href=\'/get_page/Html 原始碼\'" value=\'viewpage\'>\n         </form>\n      </section>\n   </body>\n</html>\nCOPY TO CLIPBOARD\t \n \n', 'tags': '', 'url': '插入程式碼.html'}, {'title': '網際簡報', 'text': 'CMSimfly 中採用  Reveal.js  作為網際簡報, 其中的維護檔案位於 config/reveal.js, 而對應的簡報檔案則位於 reveal 目錄中. \n', 'tags': '', 'url': '網際簡報.html'}, {'title': '網誌編輯', 'text': 'CMSimfly 彩用  Pelican blog  系統, 編輯檔案位於 config/pelican.leo, 對應的 \n \xa0Markdown 原始檔案位於 markdown 目錄中, 而經 Pelican 轉換出的網誌超文件檔案則位於 blog 目錄中. \n 其餘在網誌文章中所需要的 Javascript 或 Brython 程式檔案, 則與 CMSimfly 及 Reveal.js 共用, 位於 static 目錄下. \n 上傳檔案與圖檔的引用則與 CMSimfly 架構相同. \n', 'tags': '', 'url': '網誌編輯.html'}, {'title': '網際內容管理', 'text': '2019 Spring 課程目標 \n 網際內容管理 \n 讓學員得以利用全球資訊網發表與 (精密) 機械 (設計) 相關的內容, 並進行有效管理. 內容發表: Google Blogger, Github Pages 有效管理: 透過 API 程式整合兩者之間的內容, 包括 CMSimfly, Reveal 與 Pelican Blog 與 Blogger \n', 'tags': '', 'url': '網際內容管理.html'}, {'title': 'CMSimfly網頁簡介', 'text': 'CMSimfly ( https://github.com/chiamingyen/cmsimfly)  是一套簡單的網際內容管理系統, 採用 Flask 網際框架, 以 Beautifulsoup 解讀分頁內容. \n 本網頁進度內容(week4、week5......)及影片皆取自 https://2019wcm.blogspot.com/ 網際內容管理網誌。將每周導師所教學之內容更新於此網頁。 \n', 'tags': '', 'url': 'CMSimfly網頁簡介.html'}, {'title': '近端配置與管理(網管)', 'text': 'windows network setting(確認當下有連線到網際網路及設定正確) \n \n chrome proxy(開啟網頁後進入設定-開啟proxy設定-輸入伺服器位址及連接埠-進入進階設定將特定網址取消使用proxy) \n \n firefox proxy(開啟網頁後點選上方工具-選項-進階-網路-設定-手動設定proxy-設定完成即可，每次登入時輸入帳號密碼) \n \n \n \n \n mde.tw(網頁搜尋:mde.tw即可登入課程網頁) \n \n \n github.com(網頁搜尋:github.com-輸入帳號密碼即可登入自己的github) \n \n \n \n portable programming system(進入 https://2019wcm.blogspot.com/ 後，右方即可看到 2019_cdb_w5.7z 及 2019_cdb_w13.7z ，任一下載後解壓縮即可) \n \n \n portablegit - remove helper = manager(開啟start-輸入 git config --edit --system，即可進入下方圖面的頁面-將 credential 項目中的 helper = manager 刪除後儲存{儲存指令:wq}即可 ) \n \n login github add repository - README.md(進入github後-點選右方選項your repository-NEW-建立新的倉儲，倉儲姓名及設定好之後即可建立) \n \n \n git clone\xa0 self-repo and CMSimfly(輸入指令cd tmp-cd 倉儲名，進入倉儲資料夾之後-輸入 git clone  git@github.com:帳號名/ 倉儲名.git，即可clone自己的倉儲，另外需取得CMSimfly倉儲內容，所以也必須將 https://github.com/chiamingyen/cmsimfly 的內容copy到自己倉儲) \n \n \n \n \n y:\\home\\.gitconfig(輸入指令git config --global user.name""、git config --global user.email""、git config --global http.proxy) \n \n git config --global user.name "倉儲姓名" git config --global user.email "倉儲信箱" \n git config --global http.proxy http://伺服器網址+連接埠號 \n \n git add .、git commit -m ""、git push(這是每次改版後必須輸入的指令，將改版內容commit及push到倉儲更新) \n git add .(拍快照) \n git commit -m "當次改版標題"(提交改版) \n git push(上傳推到網站) \n \n Github Pages - setting, url(進入倉儲內的setting-下滑到Github Pages-將Source第一個選項改為master branch即可) \n \n local python wsgi.py(開啟動態網頁-步驟:cd tmp-cd 倉儲名-python wsgi.py-複製網址並貼上即可進入動態網頁) \n \n \n ssh vs https (y:\\home\\.ssh\\config) \n (在可攜式系統的視窗內 以 sh 執行 Git 的 shell,\xa0 可透過指令 ssh-keygen -t rsa -b 4096 -C "This is my key" 建立位於 y:\\home\\.ssh\\id_rsa 的 Private Key 與位於 y:\\home\\.ssh\\id_rsa.pub 的 Public Key，將 id_rsa.pub 的內容, 轉貼到 Github 帳號 settings 中 SSH and GPG keys 項目內的 SSH Public Key 區-使用ssh 協定執行 git clone，ex: git clone git@github.com:50733141/test_41_2.git ，即可使用ssh協定進行連線) \n ( 利用ssh協定連線後，之後改版 配合 ungit 使用時, 可以直接輸入提交訊息後, 以 commit & push 將近端版本提交推送到遠端 ) \n \n .git/config (url =  git@github.com:50733141/test_41_2.git) \n (在url選項後面顯示的項目，可設定要利用http或是ssh連線) \n \n', 'tags': '', 'url': '近端配置與管理(網管).html'}, {'title': '程式', 'text': '', 'tags': '', 'url': '程式.html'}, {'title': '亂數產生系統', 'text': '按一下 \n \n \n 上述程式原始碼: \n <p><button onclick="myFunction()">Try it</button></p>\n<p id="demo"></p>\n<script>// <![CDATA[\nfunction myFunction() {\n  document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);\n}\n// ]]></script> \n \n', 'tags': '', 'url': '亂數產生系統.html'}, {'title': 'game-擲骰子', 'text': ' Your browser doesn\'t support the HTML5 element canvas.      擲骰子  \n Stage:   Point:   Outcome:  \n 上述程式原始碼: \n <script type="text/javascript">// <![CDATA[\nvar cwidth = 400;\n    var cheight = 300;\n    var dicex = 50;\n    var dicey = 50;\n    var dicewidth = 100;\n    var diceheight = 100;\n    var dotrad = 6;\n    var ctx;\n    var dx;\n    var dy;\n    var firstturn = true;\n    var point;\nfunction throwdice() {\n    var sum;\n    var ch = 1+Math.floor(Math.random()*6);\n    sum = ch;\n    dx = dicex;\n    dy = dicey;\n    drawface(ch);\n    dx = dicex + 150;\n    ch=1 + Math.floor(Math.random()*6);\n    sum += ch;\n    drawface(ch);\n    if (firstturn) {\n        switch(sum) {\n            case 7:\n            case 11:\n              document.f.outcome.value="You win!";\n              break;\n            case 2:\n            case 3:\n            case 12:\n              document.f.outcome.value="You lose!";\n              break;\n            default:\n              point = sum;\n              document.f.pv.value=point;\n              firstturn = false;\n              document.f.stage.value="Need follow-up throw.";\n              document.f.outcome.value="   ";\n        }\n    }\n    else {\n        switch(sum) {\n        case point:\n           document.f.outcome.value="You win!";\n           document.f.stage.value="Back to first throw.";\n           document.f.pv.value=" ";\n           firstturn = true;\n           break;\n        case 7:\n           document.f.outcome.value="You lose!";\n           document.f.stage.value="Back to first throw.";\n           document.f.pv.value=" ";\n           firstturn = true;\n        }\n            }\n}\nfunction drawface(n) {\n  ctx = document.getElementById(\'canvas\').getContext(\'2d\');  \n  ctx.lineWidth = 5;\n  ctx.clearRect(dx,dy,dicewidth,diceheight);\n  ctx.strokeRect(dx,dy,dicewidth,diceheight)\n  var dotx;\n  var doty;\n  ctx.fillStyle = "#009966";\n    switch(n) {\n        case 1:\n         draw1();\n         break;\n        case 2:\n         draw2();\n         break;\n        case 3:\n         draw2();\n         draw1();\n         break;\n        case 4:\n         draw4();\n         break;\n        case 5:\n         draw4();\n         draw1();\n         break;\n        case 6:\n         draw4();\n         draw2mid();\n         break;\n         \n    }\n}\nfunction draw1() {\n    var dotx;\n    var doty;\n    ctx.beginPath();\n    dotx = dx + .5*dicewidth;\n    doty = dy + .5*diceheight;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\nfunction draw2() {\n    var dotx;\n    var doty;\n    ctx.beginPath();\n    dotx = dx + 3*dotrad;\n    doty = dy + 3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    dotx = dx+dicewidth-3*dotrad;\n    doty = dy+diceheight-3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\nfunction draw4() {\n    var dotx;\n    var doty;\n    ctx.beginPath();\n    dotx = dx + 3*dotrad;\n    doty = dy + 3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    dotx = dx+dicewidth-3*dotrad;\n    doty = dy+diceheight-3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    dotx = dx + 3*dotrad;\n    doty = dy + diceheight-3*dotrad;  //no change\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    dotx = dx+dicewidth-3*dotrad;\n    doty = dy+ 3*dotrad;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill(); \n}\nfunction draw2mid() {\n    var dotx;\n    var doty;\n    ctx.beginPath();\n    dotx = dx + 3*dotrad;\n    doty = dy + .5*diceheight;\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    dotx = dx+dicewidth-3*dotrad;\n    doty = dy + .5*diceheight; //no change\n    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\n// ]]></script>\n<p><canvas height="300" id="canvas" width="400"> Your browser doesn\'t support the HTML5 element canvas. </canvas> <br> <button onclick="throwdice();">Throw dice </button></p>\n<form id="f" name="f">Stage: <input name="stage" type="text" value="First Throw"> Point: <input name="pv" type="text" value="   "> Outcome: <input name="outcome" type="text" value="     "></form> \n', 'tags': '', 'url': 'game-擲骰子.html'}, {'title': '繪圖', 'text': ' Your browser doesn\'t support the HTML5 element canvas.  \n \n 繪圖   清除 \n 上述以 Html5 Canvas 繪圖的程式碼: \n <p><canvas height="300" id="canvas" width="400"> Your browser doesn\'t support the HTML5 element canvas. </canvas></p>\n<script>\ncanvas = document.getElementById("canvas");\nctx = canvas.getContext(\'2d\');\n \nfunction draw(){\n ctx.beginPath();\n ctx.strokeStyle = "rgb(200,0,0)";\n ctx.arc(200, 200,50,0,2*Math.PI, false);\n ctx.closePath();\n ctx.stroke();\n}\n \nfunction clear_canvas(){\n// Store the current transformation matrix\n// The save() method pushes the current state onto the stack..\nctx.save();\n \n// Use the identity matrix while clearing the canvas\n// the setTransform() method lets you scale, rotate, move, and skew the current context.\n// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)\nctx.setTransform(1, 0, 0, 1, 0, 0);\nctx.clearRect(0, 0, canvas.width, canvas.height);\n// Restore the transform\n// The restore() method pops the top state on the stack, restoring the context to that state.\nctx.restore();\n}\n</script>\n<p><button onclick="draw()">繪圖</button> <button onclick="clear_canvas()">清除</button></p> \n \n', 'tags': '', 'url': '繪圖.html'}, {'title': 'ROC flag', 'text': '注意事項 :需將w5 or w13資料夾裡自己倉儲的flaskapp.py檔案進行修改，國旗才可顯示出來。 \n 修改後錯誤 :修改後利用Edit All進行編輯，編輯完成並典籍save按鈕時，會顯示錯誤。解決方式:將 week_14 分支裡下方的程式碼全部複製並蓋過自己的flaskapp.py檔案。 \n 二次修改後錯誤: 將flaskapp.py檔案更改之後，可進行Edit All編輯並save，國旗也可顯示，但在進行改版之後，靜態網頁會排版方式會顯示錯誤。解決方法:繼續使用第一次修改的flaskapp.py檔案，並等待錯誤修復。 第一次修改的flaskapp.py檔案程式碼會放在本頁最下方。 \n def savePage() 的修改 \n \n def savePage():\n    """save all pages function"""\n    page_content = request.form[\'page_content\']\n    # when element_format : "html", need to remove the annoying comment to prevent brython exec\n    page_content = [w.replace(\'// <![CDATA[\', \'\') for w in page_content]\n    page_content = [w.replace(\'// ]]>\', \'\') for w in page_content]\n    # check if administrator\n...... \n def ssavePage() 的修改 \n def ssavePage():\n    """seperate save page function"""\n    page_content = request.form[\'page_content\']\n    # when element_format : "html", need to remove the annoying comment to prevent brython exec\n    page_content = page_content.replace(\'// <![CDATA[\', \'\')\n    page_content = page_content.replace(\'// ]]>\', \'\')\n    page_order = request.form[\'page_order\']\n    if not isAdmin():\n...... \n \xa0 \n  導入 Brython 標準程式庫  \n \n \n \n  啟動 Brython  \n \n \n \n \n \n \n 國旗程式碼 \n <!-- 導入 Brython 標準程式庫 -->\n<script src="./../static/brython.js"></script>\n<script src="./../static/brython_stdlib.js"></script>\n<p></p>\n<!-- 啟動 Brython -->\n<script>// <![CDATA[\nwindow.onload=function(){\n// 設定 data/py 為共用程式路徑\nbrython({debug:1, pythonpath:[\'./../data/py\']});\n}\n// ]]></script>\n<p><canvas height="400" id="plotarea" width="600"></canvas></p>\n<script type="text/python">// <![CDATA[\n# 導入 doc\nfrom browser import document as doc\nimport math\n\n# 準備繪圖畫布\ncanvas = doc["plotarea"]\nctx = canvas.getContext("2d")\n# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點\n# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)\n# 以下採用 canvas 原始座標繪圖\nflag_w = canvas.width\nflag_h = canvas.height\ncircle_x = flag_w/4\ncircle_y = flag_h/4\n# 先畫滿地紅\nctx.fillStyle=\'rgb(255, 0, 0)\'\nctx.fillRect(0,0,flag_w,flag_h)\n# 再畫青天\nctx.fillStyle=\'rgb(0, 0, 150)\'\nctx.fillRect(0,0,flag_w/2,flag_h/2)\n# 畫十二道光芒白日\nctx.beginPath()\nstar_radius = flag_w/8\nangle = 0\nfor i in range(24):\n    angle += 5*math.pi*2/12\n    toX = circle_x + math.cos(angle)*star_radius\n    toY = circle_y + math.sin(angle)*star_radius\n    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo\n    if (i):\n        ctx.lineTo(toX, toY)\n    else:\n        ctx.moveTo(toX, toY)\nctx.closePath()\n# 將填色設為白色\nctx.fillStyle = \'#fff\'\nctx.fill()\n# 白日:藍圈\nctx.beginPath()\nctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)\nctx.closePath()\n# 填色設為藍色\nctx.fillStyle = \'rgb(0, 0, 149)\'\nctx.fill()\n# 白日:白心\nctx.beginPath()\nctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)\nctx.closePath()\n# 填色設為白色\nctx.fillStyle = \'#fff\'\nctx.fill()\n// ]]></script> \n 第一次修改flaskapp.py程式碼: \n # coding: utf-8\nfrom flask import Flask, send_from_directory, request, redirect, \\\n    render_template, session, make_response, url_for, flash\nimport random\nimport math\nimport os\n# init.py 為自行建立的起始物件\nimport init\n# 利用 nocache.py 建立 @nocache decorator, 讓頁面不會留下 cache\nfrom nocache import nocache\n# the followings are for cmsimfly\nimport re\nimport os\nimport math\nimport hashlib\n# use quote_plus() to generate URL\nimport urllib.parse\n# use cgi.escape() to resemble php htmlspecialchars()\n# use cgi.escape() or html.escape to generate data for textarea tag, otherwise Editor can not deal with some Javascript code.\nimport cgi\nimport sys\n# for new parse_content function\n#from bs4 import BeautifulSoup\n# 為了使用 bs4.element, 改為 import bs4\nimport bs4\n# for ssavePage and savePage\nimport shutil\n\n# get the current directory of the file\n_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))\nsys.path.append(_curdir)\n\n# 由 init.py 中的 uwsgi = False 或 True 決定在 uwsgi 模式或近端模式執行\n\n#ends for cmsimfly\n\n# 假如隨後要利用 blueprint 架構時, 可以將程式放在子目錄中\n# 然後利用 register 方式導入\n# 導入 g1 目錄下的 user1.py\n#import users.g1.user1\n\n# 確定程式檔案所在目錄, 在 Windows 有最後的反斜線\n_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))\n# 表示程式在近端執行, 最後必須決定是由 init.py 或此地決定目錄設定\nconfig_dir = _curdir + "/config/"\nstatic_dir = _curdir + "/static"\ndownload_dir = _curdir + "/downloads/"\nimage_dir = _curdir + "/images/"\n\n# 利用 init.py 啟動, 建立所需的相關檔案\ninitobj = init.Init()\n# 取 init.py 中 Init 類別中的 class uwsgi 變數 (static variable) 設定\nuwsgi = init.Init.uwsgi\n\n# 必須先將 download_dir 設為 static_folder, 然後才可以用於 download 方法中的 app.static_folder 的呼叫\napp = Flask(__name__)\n\n# 設置隨後要在 blueprint 應用程式中引用的 global 變數\napp.config[\'config_dir\'] = config_dir\napp.config[\'static_dir\'] = static_dir\napp.config[\'download_dir\'] = download_dir\n\n# 使用 session 必須要設定 secret_key\n# In order to use sessions you have to set a secret key\n# set the secret key.  keep this really secret:\napp.secret_key = \'A0Zr9@8j/3yX R~XHH!jmN]LWX/,?R@T\'\n\n# 子目錄中註冊藍圖位置\n#app.register_blueprint(users.g1.user1.g1app)\n\n\n@app.route(\'/checkLogin\', methods=[\'POST\'])\ndef checkLogin():\n    """Check user login process."""\n    password = request.form["password"]\n    site_title, saved_password = parse_config()\n    hashed_password = hashlib.sha512(password.encode(\'utf-8\')).hexdigest()\n    if hashed_password == saved_password:\n        session[\'admin\'] = 1\n        return redirect(\'/edit_page\')\n    return redirect(\'/\')\n\n \n@app.route(\'/delete_file\', methods=[\'POST\'])\ndef delete_file():\n    """Delete user uploaded files."""\n    if not isAdmin():\n        return redirect("/login")\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    filename = request.form[\'filename\']\n    if filename is None:\n        outstring = "no file selected!"\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                   directory + "</nav><section><h1>Delete Error</h1>" + \\\n                   outstring + "<br/><br /></body></html>"\n    outstring = "delete all these files?<br /><br />"\n    outstring += "<form method=\'post\' action=\'doDelete\'>"\n    # only one file is selected\n    if isinstance(filename, str):\n        outstring += filename + "<input type=\'hidden\' name=\'filename\' value=\'" + \\\n                            filename + "\'><br />"\n    else:\n        # multiple files selected\n        for index in range(len(filename)):\n            outstring += filename[index] + "<input type=\'hidden\' name=\'filename\' value=\'" + \\\n                                filename[index]+"\'><br />"\n    outstring += "<br /><input type=\'submit\' value=\'delete\'></form>"\n\n    return set_css() + "<div class=\'container\'><nav>" + \\\n               directory + "</nav><section><h1>Download List</h1>" + \\\n               outstring + "<br/><br /></body></html>"\n\n\n@app.route(\'/doDelete\', methods=[\'POST\'])\ndef doDelete():\n    """Action to delete user uploaded files."""\n    if not isAdmin():\n        return redirect("/login")\n    # delete files\n    filename = request.form[\'filename\']\n    outstring = "all these files will be deleted:<br /><br />"\n    # only select one file\n    if isinstance(filename, str):\n        try:\n            os.remove(download_dir + "/" + filename)\n            outstring += filename + " deleted!"\n        except:\n            outstring += filename + "Error, can not delete files!<br />"\n    else:\n        # multiple files selected\n        for index in range(len(filename)):\n            try:\n                os.remove(download_dir + "/" + filename[index])\n                outstring += filename[index] + " deleted!<br />"\n            except:\n                outstring += filename[index] + "Error, can not delete files!<br />"\n\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n\n    return set_css() + "<div class=\'container\'><nav>" + \\\n               directory + "</nav><section><h1>Download List</h1>" + \\\n               outstring + "<br/><br /></body></html>"\n\n\n@app.route(\'/doSearch\', methods=[\'POST\'])\ndef doSearch():\n    """Action to search content.htm using keyword"""\n    if not isAdmin():\n        return redirect("/login")\n    else:\n        keyword = request.form[\'keyword\']\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        match = ""\n        for index in range(len(head)):\n            if (keyword != "" or None) and (keyword.lower() in page[index].lower() or \\\n            keyword.lower() in head[index].lower()): \\\n                match += "<a href=\'/get_page/" + head[index] + "\'>" + \\\n                                head[index] + "</a><br />"\n        return set_css() + "<div class=\'container\'><nav>"+ \\\n                   directory + "</nav><section><h1>Search Result</h1>keyword: " + \\\n                   keyword.lower() + "<br /><br />in the following pages:<br /><br />" + \\\n                   match + "</section></div></body></html>"\n\n\n@app.route(\'/download/\', methods=[\'GET\'])\ndef download():\n    """Download file using URL."""\n    filename = request.args.get(\'filename\')\n    type = request.args.get(\'type\')\n    if type == "files":\n        return send_from_directory(download_dir, filename=filename)\n    else:\n    # for image files\n        return send_from_directory(image_dir, filename=filename)\n    \n\n@app.route(\'/download_list\', methods=[\'GET\'])\ndef download_list():\n    """List files in downloads directory."""\n    if not isAdmin():\n        return redirect("/login")\n    else:\n        if not request.args.get(\'edit\'):\n            edit= 1\n        else:\n            edit = request.args.get(\'edit\')\n        if not request.args.get(\'page\'):\n            page = 1\n        else:\n            page = request.args.get(\'page\')\n        if not request.args.get(\'item_per_page\'):\n            item_per_page = 10\n        else:\n            item_per_page = request.args.get(\'item_per_page\')\n        if not request.args.get(\'keyword\'):\n            keyword = ""\n        else:\n            keyword = request.args.get(\'keyword\')\n            session[\'download_keyword\'] = keyword\n    files = os.listdir(download_dir)\n    if keyword is not "":\n        files = [elem for elem in files if str(keyword) in elem]\n    files.sort()\n    total_rows = len(files)\n    totalpage = math.ceil(total_rows/int(item_per_page))\n    starti = int(item_per_page) * (int(page) - 1) + 1\n    endi = starti + int(item_per_page) - 1\n    outstring = "<form method=\'post\' action=\'delete_file\'>"\n    notlast = False\n    if total_rows > 0:\n        outstring += "<br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "download_list?&page=1&item_per_page=" + str(item_per_page) + \\\n                                "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "download_list?&page=" + str(page_num) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Previous</a> "\n\n        span = 10\n\n        for index in range(int(page)-span, int(page)+span):\n            if index>= 0 and index< totalpage:\n                page_now = index + 1 \n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "download_list?&page=" + str(page_now) + "&item_per_page=" + \\\n                                        str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n                    outstring += "\'>"+str(page_now) + "</a> "\n\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "download_list?&page=" + str(nextpage) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "download_list?&page=" + str(totalpage) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>>></a><br /><br />"\n\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n            outstring += downloadlist_access_list(files, starti, endi) + "<br />"\n        else:\n            outstring += "<br /><br />"\n            outstring += downloadlist_access_list(files, starti, total_rows) + "<br />"\n\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "download_list?&page=1&item_per_page=" + str(item_per_page) + \\\n                                "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "download_list?&page=" + str(page_num) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Previous</a> "\n\n        span = 10\n\n        for index in range(int(page)-span, int(page)+span):\n        #for ($j=$page-$range;$j<$page+$range;$j++)\n            if index >=0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page)+" </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "download_list?&page=" + str(page_now) + \\\n                                        "&item_per_page=" + str(item_per_page) + \\\n                                        "&keyword=" + str(session.get(\'download_keyword\'))\n                    outstring += "\'>" + str(page_now)+"</a> "\n\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "download_list?&page=" + str(nextpage) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "download_list?&page=" + str(totalpage) + "&item_per_page=" + \\\n                                str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>>></a>"\n    else:\n        outstring += "no data!"\n    outstring += "<br /><br /><input type=\'submit\' value=\'delete\'><input type=\'reset\' value=\'reset\'></form>"\n\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n\n    return set_css() + "<div class=\'container\'><nav>" + \\\n               directory + "</nav><section><h1>Download List</h1>" + outstring + "<br/><br /></body></html>"\n\n\ndef downloadlist_access_list(files, starti, endi):\n    """List files function for download_list."""\n    # different extension files, associated links were provided\n    # popup window to view images, video or STL files, other files can be downloaded directly\n    # files are all the data to list, from starti to endi\n    # add file size\n    outstring = ""\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileExtension = fileExtension.lower()\n        fileSize = sizeof_fmt(os.path.getsize(download_dir+"/"+files[index]))\n        # images files\n        if fileExtension == ".png" or fileExtension == ".jpg" or fileExtension == ".gif":\n            outstring += \'<input type="checkbox" name="filename" value="\' + \\\n                              files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/images/\'+ \\\n                              files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + \\\n                              files[index] + \'</a> (\' + str(fileSize) + \')<br />\'\n        # stl files\n        elif fileExtension == ".stl":\n            outstring += \'<input type="checkbox" name="filename" value="\' + \\\n                              files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/static/viewstl.html?src=/downloads/\' + \\\n                              files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + \\\n                              files[index] + \'</a> (\' + str(fileSize) + \')<br />\'\n        # flv files\n        elif fileExtension == ".flv":\n            outstring += \'<input type="checkbox" name="filename" value="\' + \\\n                              files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/flvplayer?filepath=/downloads/\' + \\\n            files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + files[index] + \'</a> (\' + str(fileSize) + \')<br />\'\n        # direct download files\n        else:\n            outstring += "<input type=\'checkbox\' name=\'filename\' value=\'" + files[index] + \\\n                              "\'><a href=\'/downloads/" + files[index] + "\'>" + files[index] + \\\n                              "</a> (" + str(fileSize) + ")<br />"\n    return outstring\n\n\n# downloads 方法主要將位於 downloads 目錄下的檔案送回瀏覽器\n@app.route(\'/downloads/<path:path>\')\ndef downloads(path):\n    """Send files in downloads directory."""\n    return send_from_directory(_curdir+"/downloads/", path)\n\n\n# 與 file_selector 搭配的取檔程式\ndef downloadselect_access_list(files, starti, endi):\n    """Accompanied with file_selector."""\n    outstring = ""\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileSize = os.path.getsize(download_dir + "/" + files[index])\n        outstring += \'\'\'<input type="checkbox" name="filename" value="\'\'\' + \\\n                          files[index] + \'\'\'"><a href="#" onclick=\'window.setLink("/downloads/\'\'\' + \\\n                          files[index] + \'\'\'",0); return false;\'>\'\'\' + files[index] + \\\n                          \'\'\'</a> (\'\'\' + str(sizeof_fmt(fileSize)) + \'\'\')<br />\'\'\'\n    return outstring\n\n\n@app.route(\'/edit_config\', defaults={\'edit\': 1})\n@app.route(\'/edit_config/<path:edit>\')\ndef edit_config(edit):\n    """Config edit html form."""\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if not isAdmin():\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Login</h1><form method=\'post\' action=\'checkLogin\'> \\\n                 Password:<input type=\'password\' name=\'password\'> \\\n                 <input type=\'submit\' value=\'login\'></form> \\\n                 </section></div></body></html>"\n    else:\n        site_title, password = parse_config()\n        # edit config file\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Edit Config</h1><form method=\'post\' action=\'saveConfig\'> \\\n                 Site Title:<input type=\'text\' name=\'site_title\' value=\'"+site_title+"\' size=\'50\'><br /> \\\n                 Password:<input type=\'text\' name=\'password\' value=\'"+password+"\' size=\'50\'><br /> \\\n                 <input type=\'hidden\' name=\'password2\' value=\'"+password+"\'> \\\n                 <input type=\'submit\' value=\'send\'></form> \\\n                 </section></div></body></html>"\n\n\n# edit all page content\n@app.route(\'/edit_page\', defaults={\'edit\': 1})\n@app.route(\'/edit_page/<path:edit>\')\ndef edit_page(edit):\n    """Page edit html form."""\n    # check if administrator\n    if not isAdmin():\n        return redirect(\'/login\')\n    else:\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        pagedata =file_get_contents(config_dir + "content.htm")\n        outstring = tinymce_editor(directory, cgi.escape(pagedata))\n        return outstring\n\n\ndef editorfoot():\n    return \'\'\'<body>\'\'\'\n\n\ndef editorhead():\n    return \'\'\'\n    <br />\n<!--<script src="//cdn.tinymce.com/4/tinymce.min.js"></script>-->\n<script src="./../static/tinymce4/tinymce/tinymce.min.js"></script>\n<script src="./../static/tinymce4/tinymce/plugins/sh4tinymce/plugin.min.js"></script>\n<link rel = "stylesheet" href = "/static/tinymce4/tinymce/plugins/sh4tinymce/style/style.css">\n<script>\ntinymce.init({\n  selector: "textarea",\n  height: 500,\n  element_format : "html",\n  language : "en",\n  valid_elements : \'*[*]\',\n  extended_valid_elements: "script[language|type|src]",\n  plugins: [\n    \'advlist autolink lists link image charmap print preview hr anchor pagebreak\',\n    \'searchreplace wordcount visualblocks visualchars code fullscreen\',\n    \'insertdatetime media nonbreaking save table contextmenu directionality\',\n    \'emoticons template paste textcolor colorpicker textpattern imagetools sh4tinymce\'\n  ],\n  toolbar1: \'insertfile save undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent\',\n  toolbar2: \'link image | print preview media | forecolor backcolor emoticons | code sh4tinymce\',\n  relative_urls: false,\n  toolbar_items_size: \'small\',\n  file_picker_callback: function(callback, value, meta) {\n        cmsFilePicker(callback, value, meta);\n    },\n  templates: [\n    { title: \'Test template 1\', content: \'Test 1\' },\n    { title: \'Test template 2\', content: \'Test 2\' }\n  ],\n  content_css: [\n    \'//fonts.googleapis.com/css?family=Lato:300,300i,400,400i\',\n    \'//www.tinymce.com/css/codepen.min.css\'\n  ]\n});\n\nfunction cmsFilePicker(callback, value, meta) {\n    tinymce.activeEditor.windowManager.open({\n        title: \'Uploaded File Browser\',\n        url: \'/file_selector?type=\' + meta.filetype,\n        width: 800,\n        height: 550,\n    }, {\n        oninsert: function (url, objVals) {\n            callback(url, objVals);\n        }\n    });\n};\n</script>\n\'\'\'\n\n\n@app.route(\'/error_log\')\ndef error_log(self, info="Error"):\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    return set_css() + "<div class=\'container\'><nav>" + \\\n             directory + "</nav><section><h1>ERROR</h1>" + info + "</section></div></body></html>"\n\n\ndef file_get_contents(filename):\n    # open file in utf-8 and return file content\n    with open(filename, encoding="utf-8") as file:\n        return file.read()\n\n\n# 與 file_selector 配合, 用於 Tinymce4 編輯器的檔案選擇\ndef file_lister(directory, type=None, page=1, item_per_page=10):\n    files = os.listdir(directory)\n    total_rows = len(files)\n    totalpage = math.ceil(total_rows/int(item_per_page))\n    starti = int(item_per_page) * (int(page) - 1) + 1\n    endi = starti + int(item_per_page) - 1\n    outstring = file_selector_script()\n    notlast = False\n    if total_rows > 0:\n        outstring += "<br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "file_selector?type=" + type + \\\n                              "&page=1&item_per_page=" + \\\n                              str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "file_selector?type=" + type + \\\n                              "&page=" + str(page_num) + \\\n                              "&item_per_page=" +str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index>= 0 and index< totalpage:\n                page_now = index + 1 \n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "file_selector?type=" + type + "&page=" + \\\n                                      str(page_now) + "&item_per_page=" + \\\n                                      str(item_per_page) + "&keyword=" + \\\n                                      str(session.get(\'download_keyword\'))\n                    outstring += "\'>" + str(page_now)+"</a> "\n\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(nextpage) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + \\\n                               str(session.get(\'download_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(totalpage) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + \\\n                               str(session.get(\'download_keyword\'))\n            outstring += "\'>>></a><br /><br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n            if type == "file":\n                outstring += downloadselect_access_list(files, starti, endi) + "<br />"\n            else:\n                outstring += imageselect_access_list(files, starti, endi) + "<br />"\n        else:\n            outstring += "<br /><br />"\n            if type == "file":\n                outstring += downloadselect_access_list(files, starti, total_rows) + "<br />"\n            else:\n                outstring += imageselect_access_list(files, starti, total_rows) + "<br />"\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "file_selector?type=" + type + \\\n                              "&page=1&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(page_num) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + \\\n                               str(session.get(\'download_keyword\'))\n            outstring += "\'>Previous</a>"\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index >=0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>"+str(page)+" </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "file_selector?type=" + type + "&page=" + \\\n                                       str(page_now) + "&item_per_page=" + \\\n                                       str(item_per_page) + "&keyword=" + \\\n                                       str(session.get(\'download_keyword\'))\n                    outstring += "\'>" + str(page_now) + "</a> "\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(nextpage) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + \\\n                               str(session.get(\'download_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "file_selector?type=" + type + "&page=" + \\\n                               str(totalpage) + "&item_per_page=" + \\\n                               str(item_per_page) + "&keyword=" + str(session.get(\'download_keyword\'))\n            outstring += "\'>>></a>"\n    else:\n        outstring += "no data!"\n\n    if type == "file":\n        return outstring+"<br /><br /><a href=\'fileuploadform\'>file upload</a>"\n    else:\n        return outstring+"<br /><br /><a href=\'imageuploadform\'>image upload</a>"\n\n\n# 配合 Tinymce4 讓使用者透過 html editor 引用所上傳的 files 與 images\n@app.route(\'/file_selector\', methods=[\'GET\'])\ndef file_selector():\n    if not isAdmin():\n        return redirect("/login")\n    else:\n        if not request.args.get(\'type\'):\n            type= "file"\n        else:\n            type = request.args.get(\'type\')\n        if not request.args.get(\'page\'):\n            page = 1\n        else:\n            page = request.args.get(\'page\')\n        if not request.args.get(\'item_per_page\'):\n            item_per_page = 10\n        else:\n            item_per_page = request.args.get(\'item_per_page\')\n        if not request.args.get(\'keyword\'):\n            keyword = None\n        else:\n            keyword = request.args.get(\'keyword\')\n\n        if type == "file":\n\n            return file_lister(download_dir, type, page, item_per_page)\n        elif type == "image":\n            return file_lister(image_dir, type, page, item_per_page)\n\n\ndef file_selector_script():\n    return \'\'\'\n<script language="javascript" type="text/javascript">\n$(function(){\n    $(\'.a\').on(\'click\', function(event){\n        setLink();\n    });\n});\n\nfunction setLink (url, objVals) {\n    top.tinymce.activeEditor.windowManager.getParams().oninsert(url, objVals);\n    top.tinymce.activeEditor.windowManager.close();\n    return false;\n}\n</script>\n\'\'\'\n\n\n@app.route(\'/fileaxupload\', methods=[\'POST\'])\n# ajax jquery chunked file upload for flask\ndef fileaxupload():\n    if isAdmin():\n        # need to consider if the uploaded filename already existed.\n        # right now all existed files will be replaced with the new files\n        filename = request.args.get("ax-file-name")\n        flag = request.args.get("start")\n        if flag == "0":\n            file = open(_curdir + "/downloads/" + filename, "wb")\n        else:\n            file = open(_curdir + "/downloads/" + filename, "ab")\n        file.write(request.stream.read())\n        file.close()\n        return "files uploaded!"\n    else:\n        return redirect("/login")\n\n\n@app.route(\'/fileuploadform\', defaults={\'edit\':1})\n@app.route(\'/fileuploadform/<path:edit>\')\ndef fileuploadform(edit):\n    if isAdmin():\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        return set_css() + "<div class=\'container\'><nav>"+ \\\n                 directory + "</nav><section><h1>file upload</h1>" + \\\n                 \'\'\'<script src="./../static/jquery.js" type="text/javascript"></script>\n<script src="./../static/axuploader.js" type="text/javascript"></script>\n<script>\n$(document).ready(function(){\n$(\'.prova\').axuploader({url:\'fileaxupload\', allowExt:[\'jpg\',\'png\',\'gif\',\'7z\',\'pdf\',\'zip\',\'flv\',\'stl\',\'swf\'],\nfinish:function(x,files)\n    {\n        alert(\'All files have been uploaded: \'+files);\n    },\nenable:true,\nremotePath:function(){\nreturn \'downloads/\';\n}\n});\n});\n</script>\n<div class="prova"></div>\n<input type="button" onclick="$(\'.prova\').axuploader(\'disable\')" value="asd" />\n<input type="button" onclick="$(\'.prova\').axuploader(\'enable\')" value="ok" />\n</section></body></html>\n\'\'\'\n    else:\n        return redirect("/login")\n\n\n@app.route(\'/flvplayer\')\n# 需要檢視能否取得 filepath 變數\ndef flvplayer(filepath=None):\n    outstring = \'\'\'\n<object type="application/x-shockwave-flash" data="/static/player_flv_multi.swf" width="320" height="240">\n     <param name="movie" value="player_flv_multi.swf" />\n     <param name="allowFullScreen" value="true" />\n     <param name="FlashVars" value="flv=\'\'\' + filepath + \'\'\'&width=320&height=240&showstop=1&showvolume=1&showtime=1\n     &startimage=/static/startimage_en.jpg&showfullscreen=1&bgcolor1=189ca8&bgcolor2=085c68\n     &playercolor=085c68" />\n</object>\n\'\'\'\n    return outstring\n\n\n@app.route(\'/generate_pages\')\ndef generate_pages():\n    # 必須決定如何處理重複標題頁面的轉檔\n    import os\n    # 確定程式檔案所在目錄, 在 Windows 有最後的反斜線\n    _curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))\n    # 根據 content.htm 內容, 逐一產生各頁面檔案\n    # 在此也要同時配合 render_menu2, 產生對應的 anchor 連結\n    head, level, page = parse_content()\n    # 處理重複標題 head 數列， 再重複標題按照次序加上 1, 2, 3...\n    newhead = []\n    for i, v in enumerate(head):\n        # 各重複標題總數\n        totalcount = head.count(v)\n        # 目前重複標題出現總數\n        count = head[:i].count(v)\n        # 針對重複標題者, 附加目前重複標題出現數 +1, 未重複採原標題\n        newhead.append(v + "-" + str(count + 1) if totalcount > 1 else v)\n    # 刪除 content 目錄中所有 html 檔案\n    filelist = [ f for f in os.listdir(_curdir + "\\\\content\\\\") if f.endswith(".html") ]\n    for f in filelist:\n        os.remove(os.path.join(_curdir + "\\\\content\\\\", f))\n    # 這裡需要建立專門寫出 html 的 write_page\n    # index.html\n    with open(_curdir + "\\\\content\\\\index.html", "w", encoding="utf-8") as f:\n        f.write(get_page2(None, newhead, 0))\n    # sitemap\n    with open(_curdir + "\\\\content\\\\sitemap.html", "w", encoding="utf-8") as f:\n        # sitemap2 需要 newhead\n        f.write(sitemap2(newhead))\n    # 以下轉檔, 改用 newhead 數列\n\n    def visible(element):\n        if element.parent.name in [\'style\', \'script\', \'[document]\', \'head\', \'title\']:\n            return False\n        elif re.match(\'<!--.*-->\', str(element.encode(\'utf-8\'))):\n            return False\n        return True\n\n    search_content = []\n    for i in range(len(newhead)):\n        # 在此必須要將頁面中的 /images/ 字串換為 images/, /downloads/ 換為 downloads/\n        # 因為 Flask 中靠 /images/ 取檔案, 但是一般 html 則採相對目錄取檔案\n        # 此一字串置換在 get_page2 中進行\n        # 加入 tipue search 模式\n        get_page_content = []\n        html_doc = get_page2(newhead[i], newhead, 0, get_page_content)\n        soup = bs4.BeautifulSoup(" ".join(get_page_content), "lxml")\n        search_content.append({"title": newhead[i], "text": " ".join(filter(visible, soup.findAll(text=True))), "tags": "", "url": newhead[i] + ".html"})\n        with open(_curdir + "\\\\content\\\\" + newhead[i] + ".html", "w", encoding="utf-8") as f:\n            # 增加以 newhead 作為輸入\n            f.write(html_doc)\n    # GENERATE js file\n    with open(_curdir + "\\\\content\\\\tipuesearch_content.js", "w", encoding="utf-8") as f:\n        f.write("var tipuesearch = {\\"pages\\": " + str(search_content) + "};")\n    # generate each page html under content directory\n    return "已經將網站轉為靜態網頁. <a href=\'/\'>Home</a>"\n# seperate page need heading and edit variables, if edit=1, system will enter edit mode\n# single page edit will use ssavePage to save content, it means seperate save page\n@app.route(\'/get_page\')\n@app.route(\'/get_page/<heading>\', defaults={\'edit\': 0})\n@app.route(\'/get_page/<heading>/<int:edit>\')\ndef get_page(heading, edit):\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if heading is None:\n        heading = head[0]\n    # 因為同一 heading 可能有多頁, 因此不可使用 head.index(heading) 搜尋 page_order\n    page_order_list, page_content_list = search_content(head, page, heading)\n    return_content = ""\n    pagedata = ""\n    outstring = ""\n    outstring_duplicate = ""\n    pagedata_duplicate = ""\n    outstring_list = []\n    for i in range(len(page_order_list)):\n        #page_order = head.index(heading)\n        page_order = page_order_list[i]\n        if page_order == 0:\n            last_page = ""\n        else:\n            last_page = head[page_order-1] + " << <a href=\'/get_page/" + \\\n                             head[page_order-1] + "\'>Previous</a>"\n        if page_order == len(head) - 1:\n            # no next page\n            next_page = ""\n        else:\n            next_page = "<a href=\'/get_page/"+ head[page_order+1] + \\\n                              "\'>Next</a> >> " + head[page_order+1]\n        if len(page_order_list) > 1:\n            return_content += last_page + " " + next_page + \\\n                                      "<br /><h1>" + heading + "</h1>" + \\\n                                      page_content_list[i] + "<br />"+ \\\n                                      last_page + " " + next_page + "<br /><hr>"\n            pagedata_duplicate = "<h"+level[page_order] + ">" + heading + \\\n                                          "</h"+level[page_order] + ">" + page_content_list[i]\n            outstring_list.append(last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata_duplicate), page_order))\n        else:\n            return_content += last_page + " " + next_page + "<br /><h1>" +\\\n                                      heading + "</h1>" + page_content_list[i] + "<br />" + last_page + " " + next_page\n            \n        pagedata += "<h"+level[page_order] + ">" + heading + "</h" + level[page_order] + ">" + page_content_list[i]\n        # 利用 cgi.escape() 將 specialchar 轉成只能顯示的格式\n        outstring += last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata), page_order)\n    \n    # edit=0 for viewpage\n    if edit == 0:\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section>" + return_content + "</section></div></body></html>"\n    # enter edit mode\n    else:\n        # check if administrator\n        if not isAdmin():\n            redirect(url_for(\'login\'))\n        else:\n            if len(page_order_list) > 1:\n                # 若碰到重複頁面頁印, 且要求編輯, 則導向 edit_page\n                #return redirect("/edit_page")\n                for i in range(len(page_order_list)):\n                    outstring_duplicate += outstring_list[i] + "<br /><hr>"\n                return outstring_duplicate\n            else:\n            #pagedata = "<h"+level[page_order]+">"+heading+"</h"+level[page_order]+">"+search_content(head, page, heading)\n            #outstring = last_page+" "+next_page+"<br />"+ tinymce_editor(directory, cgi.escape(pagedata), page_order)\n                return outstring\n\n\n# seperate page need heading and edit variables, if edit=1, system will enter edit mode\n# single page edit will use ssavePage to save content, it means seperate save page\n\'\'\'\n@app.route(\'/get_page2\')\n@app.route(\'/get_page2/<heading>\', defaults={\'edit\': 0})\n@app.route(\'/get_page2/<heading>/<int:edit>\')\n\'\'\'\n# before add tipue search function\n#def get_page2(heading, head, edit):\ndef get_page2(heading, head, edit, get_page_content = None):\n    not_used_head, level, page = parse_content()\n    # 直接在此將 /images/ 換為 ./../images/, /downloads/ 換為 ./../downloads/, 以 content 為基準的相對目錄設定\n    page = [w.replace(\'/images/\', \'./../images/\') for w in page]\n    page = [w.replace(\'/downloads/\', \'./../downloads/\') for w in page]\n    # 假如有 src="./../static/ace/則換為 src="./../static/ace/\n    page = [w.replace(\'src="./../static/\', \'src="./../static/\') for w in page]\n    directory = render_menu2(head, level, page)\n    if heading is None:\n        heading = head[0]\n    # 因為同一 heading 可能有多頁, 因此不可使用 head.index(heading) 搜尋 page_order\n    page_order_list, page_content_list = search_content(head, page, heading)\n    if get_page_content is not None:\n        get_page_content.extend(page_content_list)\n    return_content = ""\n    pagedata = ""\n    outstring = ""\n    outstring_duplicate = ""\n    pagedata_duplicate = ""\n    outstring_list = []\n    for i in range(len(page_order_list)):\n        #page_order = head.index(heading)\n        page_order = page_order_list[i]\n        if page_order == 0:\n            last_page = ""\n        else:\n            #last_page = head[page_order-1]+ " << <a href=\'/get_page/" + head[page_order-1] + "\'>Previous</a>"\n            last_page = head[page_order-1] + " << <a href=\'"+head[page_order-1] + ".html\'>Previous</a>"\n        if page_order == len(head) - 1:\n            # no next page\n            next_page = ""\n        else:\n            #next_page = "<a href=\'/get_page/"+head[page_order+1] + "\'>Next</a> >> " + head[page_order+1]\n            next_page = "<a href=\'" + head[page_order+1] + ".html\'>Next</a> >> " + head[page_order+1]\n        if len(page_order_list) > 1:\n            return_content += last_page + " " + next_page + "<br /><h1>" + \\\n                                      heading + "</h1>" + page_content_list[i] + \\\n                                      "<br />" + last_page + " "+ next_page + "<br /><hr>"\n            pagedata_duplicate = "<h"+level[page_order] + ">" + heading + "</h" + level[page_order]+">"+page_content_list[i]\n            outstring_list.append(last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata_duplicate), page_order))\n        else:\n            return_content += last_page + " " + next_page + "<br /><h1>" + \\\n                                      heading + "</h1>" + page_content_list[i] + \\\n                                      "<br />" + last_page + " " + next_page\n            \n        pagedata += "<h" + level[page_order] + ">" + heading + \\\n                          "</h" + level[page_order] + ">" + page_content_list[i]\n        # 利用 cgi.escape() 將 specialchar 轉成只能顯示的格式\n        outstring += last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata), page_order)\n    \n    # edit=0 for viewpage\n    if edit == 0:\n        \'\'\'\n        # before add tipue search function\n        return set_css2() + "<div class=\'container\'><nav>"+ \\\n        directory + "</nav><section>" + return_content + "</section></div></body></html>"\n        \'\'\'\n        return set_css2() + "<div class=\'container\'><nav>"+ \\\n        directory + "</nav><section><div id=\\"tipue_search_content\\">" + return_content + "</div></section></div></body></html>"\n    # enter edit mode\n    else:\n        # check if administrator\n        if not isAdmin():\n            redirect(url_for(\'login\'))\n        else:\n            if len(page_order_list) > 1:\n                # 若碰到重複頁面頁印, 且要求編輯, 則導向 edit_page\n                #return redirect("/edit_page")\n                for i in range(len(page_order_list)):\n                    outstring_duplicate += outstring_list[i] + "<br /><hr>"\n                return outstring_duplicate\n            else:\n            #pagedata = "<h" + level[page_order]+">" + heading + "</h" + level[page_order] + ">" + search_content(head, page, heading)\n            #outstring = last_page + " " + next_page + "<br />" + tinymce_editor(directory, cgi.escape(pagedata), page_order)\n                return outstring\n\n\n@app.route(\'/image_delete_file\', methods=[\'POST\'])\ndef image_delete_file():\n    if not isAdmin():\n        return redirect("/login")\n    filename = request.form[\'filename\']\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if filename is None:\n        outstring = "no file selected!"\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Delete Error</h1>" + \\\n                 outstring + "<br/><br /></body></html>"\n    outstring = "delete all these files?<br /><br />"\n    outstring += "<form method=\'post\' action=\'image_doDelete\'>"\n    # only one file is selected\n    if isinstance(filename, str):\n        outstring += filename + "<input type=\'hidden\' name=\'filename\' value=\'" + \\\n                          filename + "\'><br />"\n    else:\n        # multiple files selected\n        for index in range(len(filename)):\n            outstring += filename[index] + "<input type=\'hidden\' name=\'filename\' value=\'" + \\\n                              filename[index] + "\'><br />"\n    outstring += "<br /><input type=\'submit\' value=\'delete\'></form>"\n\n    return set_css() + "<div class=\'container\'><nav>" + \\\n             directory + "</nav><section><h1>Download List</h1>" + \\\n             outstring + "<br/><br /></body></html>"\n\n\n@app.route(\'/image_doDelete\', methods=[\'POST\'])\ndef image_doDelete():\n    if not isAdmin():\n        return redirect("/login")\n    # delete files\n    filename = request.form[\'filename\']\n    outstring = "all these files will be deleted:<br /><br />"\n    # only select one file\n    if isinstance(filename, str):\n        try:\n            os.remove(image_dir + "/" + filename)\n            outstring += filename + " deleted!"\n        except:\n            outstring += filename + "Error, can not delete files!<br />"\n    else:\n        # multiple files selected\n        for index in range(len(filename)):\n            try:\n                os.remove(image_dir + "/" + filename[index])\n                outstring += filename[index] + " deleted!<br />"\n            except:\n                outstring += filename[index] + "Error, can not delete files!<br />"\n\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n\n    return set_css() + "<div class=\'container\'><nav>" + \\\n             directory + "</nav><section><h1>Image List</h1>" + \\\n             outstring + "<br/><br /></body></html>"\n\n\n@app.route(\'/image_list\', methods=[\'GET\'])\ndef image_list():\n    if not isAdmin():\n        return redirect("/login")\n    else:\n        if not request.args.get(\'edit\'):\n            edit= 1\n        else:\n            edit = request.args.get(\'edit\')\n        if not request.args.get(\'page\'):\n            page = 1\n        else:\n            page = request.args.get(\'page\')\n        if not request.args.get(\'item_per_page\'):\n            item_per_page = 10\n        else:\n            item_per_page = request.args.get(\'item_per_page\')\n        if not request.args.get(\'keyword\'):\n            keyword = ""\n        else:\n            keyword = request.args.get(\'keyword\')\n            session[\'image_keyword\'] = keyword\n    files = os.listdir(image_dir)\n    if keyword is not "":\n        files = [elem for elem in files if str(keyword) in elem]\n    files.sort()\n    total_rows = len(files)\n    totalpage = math.ceil(total_rows/int(item_per_page))\n    starti = int(item_per_page) * (int(page) - 1) + 1\n    endi = starti + int(item_per_page) - 1\n    outstring = "<form method=\'post\' action=\'image_delete_file\'>"\n    notlast = False\n    if total_rows > 0:\n        outstring += "<br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "image_list?&page=1&item_per_page=" + \\\n                              str(item_per_page) + "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "image_list?&page=" + str(page_num) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index >= 0 and index < totalpage:\n                page_now = index + 1 \n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "image_list?&page=" + str(page_now) + \\\n                                      "&item_per_page=" + str(item_per_page) + \\\n                                      "&keyword=" + str(session.get(\'image_keyword\'))\n                    outstring += "\'>" + str(page_now) + "</a> "\n\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "image_list?&page=" + str(nextpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "image_list?&page=" + str(totalpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>>></a><br /><br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n            outstring += imagelist_access_list(files, starti, endi) + "<br />"\n        else:\n            outstring += "<br /><br />"\n            outstring += imagelist_access_list(files, starti, total_rows) + "<br />"\n        \n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "image_list?&page=1&item_per_page=" + \\\n                              str(item_per_page) + "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'><<</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "image_list?&page=" + str(page_num) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index >=0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "image_list?&page=" + str(page_now) + \\\n                                      "&item_per_page=" + str(item_per_page) + \\\n                                      "&keyword=" + str(session.get(\'image_keyword\'))\n                    outstring += "\'>"+str(page_now) + "</a> "\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "image_list?&page=" + str(nextpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "image_list?&page=" + str(totalpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'image_keyword\'))\n            outstring += "\'>>></a>"\n    else:\n        outstring += "no data!"\n    outstring += "<br /><br /><input type=\'submit\' value=\'delete\'><input type=\'reset\' value=\'reset\'></form>"\n\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n\n    return set_css() + "<div class=\'container\'><nav>"+ \\\n             directory + "</nav><section><h1>Image List</h1>" + \\\n             outstring + "<br/><br /></body></html>"\n\n\n@app.route(\'/imageaxupload\', methods=[\'POST\'])\n# ajax jquery chunked file upload for flask\ndef imageaxupload():\n    if isAdmin():\n        # need to consider if the uploaded filename already existed.\n        # right now all existed files will be replaced with the new files\n        filename = request.args.get("ax-file-name")\n        flag = request.args.get("start")\n        if flag == "0":\n            file = open(_curdir + "/images/" + filename, "wb")\n        else:\n            file = open(_curdir + "/images/" + filename, "ab")\n        file.write(request.stream.read())\n        file.close()\n        return "image files uploaded!"\n    else:\n        return redirect("/login")\n\n\ndef imagelist_access_list(files, starti, endi):\n    # different extension files, associated links were provided\n    # popup window to view images, video or STL files, other files can be downloaded directly\n    # files are all the data to list, from starti to endi\n    # add file size\n    outstring = ""\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileExtension = fileExtension.lower()\n        fileSize = sizeof_fmt(os.path.getsize(image_dir + "/" + files[index]))\n        # images files\n        if fileExtension == ".png" or fileExtension == ".jpg" or fileExtension == ".gif":\n            outstring += \'<input type="checkbox" name="filename" value="\' + files[index] + \\\n                              \'"><a href="javascript:;" onClick="window.open(\\\'/images/\' + \\\n                              files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + \\\n                              files[index] + \'</a> (\' + str(fileSize) + \')<br />\'\n    return outstring\n\n\n# 與 file_selector 搭配的取影像檔程式\ndef imageselect_access_list(files, starti, endi):\n    outstring = \'\'\'<head>\n<style>\na.xhfbfile {padding: 0 2px 0 0; line-height: 1em;}\na.xhfbfile img{border: none; margin: 6px;}\na.xhfbfile span{display: none;}\na.xhfbfile:hover span{\n    display: block;\n    position: relative;\n    left: 150px;\n    border: #aaa 1px solid;\n    padding: 2px;\n    background-color: #ddd;\n}\na.xhfbfile:hover{\n    background-color: #ccc;\n    opacity: .9;\n    cursor:pointer;\n}\n</style>\n</head>\n\'\'\'\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileSize = os.path.getsize(image_dir+"/"+files[index])\n        outstring += \'\'\'<a class="xhfbfile" href="#" onclick=\'window.setLink("/images/\'\'\'+ \\\n                          files[index] + \'\'\'",0); return false;\'>\'\'\' + \\\n                          files[index] + \'\'\'<span style="position: absolute; z-index: 4;"><br /> \\\n                          <img src="./../images/\'\'\' + files[index] + \'\'\'" width="150px"/></span></a> \\\n                          (\'\'\' + str(sizeof_fmt(fileSize)) + \'\'\')<br />\'\'\'\n    return outstring\n\n\n@app.route(\'/imageuploadform\', defaults={\'edit\': 1})\n@app.route(\'/imageuploadform/<path:edit>\')\ndef imageuploadform(edit):\n    """image files upload form"""\n    if isAdmin():\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>image files upload</h1>" + \'\'\'\n<script src="./../static/jquery.js" type="text/javascript"></script>\n<script src="./../static/axuploader.js" type="text/javascript"></script>\n<script>\n$(document).ready(function(){\n$(\'.prova\').axuploader({url:\'imageaxupload\', allowExt:[\'jpg\',\'png\',\'gif\'],\nfinish:function(x,files)\n    {\n        alert(\'All files have been uploaded: \'+files);\n    },\nenable:true,\nremotePath:function(){\nreturn \'images/\';\n}\n});\n});\n</script>\n<div class="prova"></div>\n<input type="button" onclick="$(\'.prova\').axuploader(\'disable\')" value="asd" />\n<input type="button" onclick="$(\'.prova\').axuploader(\'enable\')" value="ok" />\n</section></body></html>\n\'\'\'\n    else:\n        return redirect("/login")\n\n\n@app.route(\'/\')\ndef index():\n    head, level, page = parse_content()\n    # 2018.12.13, 將空白轉為"+" 號, 會導致連線錯誤, 改為直接取頁面標題\n    #return redirect("/get_page/" + urllib.parse.quote_plus(head[0], encoding="utf-8"))\n    return redirect("/get_page/" + head[0])\n    # the following will never execute\n    directory = render_menu(head, level, page)\n    if heading is None:\n        heading = head[0]\n    # 因為同一 heading 可能有多頁, 因此不可使用 head.index(heading) 搜尋 page_order\n    page_order_list, page_content_list = search_content(head, page, heading)\n    return_content = ""\n    for i in range(len(page_order_list)):\n        #page_order = head.index(heading)\n        page_order = page_order_list[page_order_list[i]]\n        if page_order == 0:\n            last_page = ""\n        else:\n            last_page = head[page_order-1] + " << <a href=\'/get_page/" + \\\n                             head[page_order-1] + "\'>Previous</a>"\n        if page_order == len(head) - 1:\n            # no next page\n            next_page = ""\n        else:\n            next_page = "<a href=\'/get_page/" + head[page_order+1] + \\\n                              "\'>Next</a> >> " + head[page_order+1]\n        return_content += last_page + " " + next_page + "<br /><h1>" + \\\n                                  heading + "</h1>" + page_content_list[page_order_list[i]] + \\\n                                  "<br />" + last_page + " " + next_page\n\n    return set_css() + "<div class=\'container\'><nav>" + \\\n             directory + "</nav><section>" + return_content + "</section></div></body></html>"\n\n\ndef isAdmin():\n    if session.get(\'admin\') == 1:\n            return True\n    else:\n        return False\n\n\n# use to check directory variable data\n@app.route(\'/listdir\')\ndef listdir():\n    return download_dir + "," + config_dir\n\n\n@app.route(\'/load_list\')\ndef load_list(item_per_page=5, page=1, filedir=None, keyword=None):\n    files = os.listdir(config_dir+filedir+"_programs/")\n    if keyword is None:\n        pass\n    else:\n        session[\'search_keyword\'] = keyword\n        files = [s for s in files if keyword in s]\n    total_rows = len(files)\n    totalpage = math.ceil(total_rows/int(item_per_page))\n    starti = int(item_per_page) * (int(page) - 1) + 1\n    endi = starti + int(item_per_page) - 1\n    outstring = \'\'\'<script>\nfunction keywordSearch(){\n    var oform = document.forms["searchform"];\n    // 取elements集合中 name 屬性為 keyword 的值\n    var getKeyword = oform.elements.keyword.value;\n    // 改為若表單為空, 則列出全部資料\n    //if(getKeyword != ""){\n        window.location = "?brython&keyword="+getKeyword;\n    //}\n}\n</script>\n    <form name="searchform">\n    <input type="text" id="keyword" />\n    <input type="button" id="send" value="查詢" onClick="keywordSearch()"/> \n    </form>\n\'\'\'\n    outstring += "<form name=\'filelist\' method=\'post\' action=\'\'>"\n    notlast = False\n    if total_rows > 0:\n        # turn off the page selector on top\n        \'\'\'\n        outstring += "<br />"\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "brython?&page=1&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n            outstring += "\'>{{</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "brython?&page="+str(page_num)+"&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 10\n        for index in range(int(page)-span, int(page)+span):\n            if index>= 0 and index< totalpage:\n                page_now = index + 1 \n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>"+str(page)+" </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "brython?&page="+str(page_now)+"&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n                    outstring += "\'>"+str(page_now)+"</a> "\n\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "brython?&page="+str(nextpage)+"&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "brython?&page="+str(totalpage)+"&item_per_page="+str(item_per_page)+"&keyword="+str(session.get(\'search_keyword\'))\n            outstring += "\'>}}</a><br /><br />"\n        \'\'\'\n        if (int(page) * int(item_per_page)) < total_rows:\n            notlast = True\n            outstring += loadlist_access_list(files, starti, endi, filedir) + "<br />"\n        else:\n            outstring += "<br /><br />"\n            outstring += loadlist_access_list(files, starti, total_rows, filedir) + "<br />"\n        \n        if int(page) > 1:\n            outstring += "<a href=\'"\n            outstring += "/"+filedir + "?&page=1&item_per_page=" + str(item_per_page)+"&keyword=" + str(session.get(\'search_keyword\'))\n            outstring += "\'>{{</a> "\n            page_num = int(page) - 1\n            outstring += "<a href=\'"\n            outstring += "/"+filedir + "?&page=" + str(page_num)+"&item_per_page=" + \\\n                              str(item_per_page) + "&keyword=" + str(session.get(\'search_keyword\'))\n            outstring += "\'>Previous</a> "\n        span = 5\n        for index in range(int(page)-span, int(page)+span):\n        #for ($j=$page-$range;$j<$page+$range;$j++)\n            if index >=0 and index < totalpage:\n                page_now = index + 1\n                if page_now == int(page):\n                    outstring += "<font size=\'+1\' color=\'red\'>" + str(page) + " </font>"\n                else:\n                    outstring += "<a href=\'"\n                    outstring += "/" + filedir + "?&page=" + str(page_now) + \\\n                                      "&item_per_page=" + str(item_per_page) + \\\n                                      "&keyword="+str(session.get(\'search_keyword\'))\n                    outstring += "\'>" + str(page_now) + "</a> "\n        if notlast == True:\n            nextpage = int(page) + 1\n            outstring += " <a href=\'"\n            outstring += "/" + filedir + "?&page=" + str(nextpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'search_keyword\'))\n            outstring += "\'>Next</a>"\n            outstring += " <a href=\'"\n            outstring += "/" + filedir + "?&page=" + str(totalpage) + \\\n                              "&item_per_page=" + str(item_per_page) + \\\n                              "&keyword=" + str(session.get(\'search_keyword\'))\n            outstring += "\'>}}</a>"\n    else:\n        outstring += "no data!"\n    #outstring += "<br /><br /><input type=\'submit\' value=\'load\'><input type=\'reset\' value=\'reset\'></form>"\n    outstring += "<br /><br /></form>"\n\n    return outstring\n\n\ndef loadlist_access_list(files, starti, endi, filedir):\n    # different extension files, associated links were provided\n    # popup window to view images, video or STL files, other files can be downloaded directly\n    # files are all the data to list, from starti to endi\n    # add file size\n    outstring = ""\n    for index in range(int(starti)-1, int(endi)):\n        fileName, fileExtension = os.path.splitext(files[index])\n        fileExtension = fileExtension.lower()\n        fileSize = sizeof_fmt(os.path.getsize(config_dir + filedir + "_programs/" + files[index]))\n        # images files\n        if fileExtension == ".png" or fileExtension == ".jpg" or fileExtension == ".gif":\n            outstring += \'<input type="checkbox" name="filename" value="\' + files[index] + \\\n                              \'"><a href="javascript:;" onClick="window.open(\\\'/downloads/\'+ \\\n                            files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + files[index] + \'</a> (\' + str(fileSize)+\')<br />\'\n        # stl files\n        elif fileExtension == ".stl":\n            outstring += \'<input type="checkbox" name="filename" value="\' + files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/static/viewstl.html?src=/downloads/\' + \\\n            files[index] + \'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + files[index] + \'</a> (\'+str(fileSize)+\')<br />\'\n        # flv files\n        elif fileExtension == ".flv":\n            outstring += \'<input type="checkbox" name="filename" value="\' + files[index] + \'"><a href="javascript:;" onClick="window.open(\\\'/flvplayer?filepath=/downloads/\' + \\\n            files[index]+\'\\\',\\\'images\\\', \\\'catalogmode\\\',\\\'scrollbars\\\')">\' + files[index] + \'</a> (\'+str(fileSize)+\')<br />\'\n        # py files\n        elif fileExtension == ".py":\n            outstring += \'<input type="radio" name="filename" value="\' + files[index] + \'">\' + files[index] + \' (\' + str(fileSize) + \')<br />\'\n        # direct download files\n        else:\n            outstring += "<input type=\'checkbox\' name=\'filename\' value=\'" + files[index] + \\\n                             "\'><a href=\'/" + filedir + "_programs/" + files[index] + "\'>" + files[index] + "</a> (" + str(fileSize) + ")<br />"\n    return outstring\n\n\n@app.route(\'/login\')\ndef login():\n    """login routine"""\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if not isAdmin():\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Login</h1><form method=\'post\' action=\'checkLogin\'> \\\n                Password:<input type=\'password\' name=\'password\'> \\\n    <input type=\'submit\' value=\'login\'></form> \\\n    </section></div></body></html>"\n    else:\n        return redirect(\'/edit_page\')\n\n\n@app.route(\'/logout\')\ndef logout():\n    session.pop(\'admin\' , None)\n    flash(\'已經登出!\')\n    return redirect(url_for(\'login\'))\n\n\ndef parse_config():\n    if not os.path.isfile(config_dir+"config"):\n        # create config file if there is no config file\n        # default password is admin\n        password="admin"\n        hashed_password = hashlib.sha512(password.encode(\'utf-8\')).hexdigest()\n        with open(config_dir + "config", "w", encoding="utf-8") as f:\n            f.write("siteTitle:CMSimfly \\npassword:"+hashed_password)\n    config = file_get_contents(config_dir + "config")\n    config_data = config.split("\\n")\n    site_title = config_data[0].split(":")[1]\n    password = config_data[1].split(":")[1]\n    return site_title, password\n\n\ndef _remove_h123_attrs(soup):\n    tag_order = 0\n    for tag in soup.find_all([\'h1\', \'h2\', \'h3\']):\n        # 假如標註內容沒有字串\n        #if len(tag.text) == 0:\n        if len(tag.contents) ==0:\n            # 且該標註為排序第一\n            if tag_order == 0:\n                tag.string = "First"\n            else:\n                # 若該標註非排序第一, 則移除無內容的標題標註\n                tag.extract()\n        # 針對單一元件的標題標註\n        elif len(tag.contents) == 1:\n            # 若內容非為純文字, 表示內容為其他標註物件\n            if tag.get_text() == "":\n                # 且該標註為排序第一\n                if tag_order == 0:\n                    # 在最前方插入標題\n                    tag.insert_before(soup.new_tag(\'h1\', \'First\'))\n                else:\n                    # 移除 h1, h2 或 h3 標註, 只留下內容\n                    tag.replaceWithChildren()\n            # 表示單一元件的標題標註, 且標題為單一字串者\n            else:\n                # 判定若其排序第一, 則將 tag.name 為 h2 或 h3 者換為 h1\n                if tag_order == 0:\n                    tag.name = "h1"\n            # 針對其餘單一字串內容的標註, 則保持原樣\n        # 針對內容一個以上的標題標註\n        #elif len(tag.contents) > 1:\n        else:\n            # 假如該標註內容長度大於 1\n            # 且該標註為排序第一\n            if tag_order == 0:\n                # 先移除 h1, h2 或 h3 標註, 只留下內容\n                #tag.replaceWithChildren()\n                # 在最前方插入標題\n                tag.insert_before(soup.new_tag(\'h1\', \'First\'))\n            else:\n                # 只保留標題內容,  去除 h1, h2 或 h3 標註\n                # 為了與前面的內文區隔, 先在最前面插入 br 標註\n                tag.insert_before(soup.new_tag(\'br\'))\n                # 再移除非排序第一的 h1, h2 或 h3 標註, 只留下內容\n                tag.replaceWithChildren()\n        tag_order = tag_order + 1\n\n    return soup\n\ndef parse_content():\n    """use bs4 and re module functions to parse content.htm"""\n    #from pybean import Store, SQLiteWriter\n    # if no content.db, create database file with cms table\n    \'\'\'\n    if not os.path.isfile(config_dir+"content.db"):\n        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))\n        cms = library.new("cms")\n        cms.follow = 0\n        cms.title = "head 1"\n        cms.content = "content 1"\n        cms.memo = "first memo"\n        library.save(cms)\n        library.commit()\n    \'\'\'\n    # if no content.htm, generate a head 1 and content 1 file\n    if not os.path.isfile(config_dir+"content.htm"):\n        # create content.htm if there is no content.htm\n        with open(config_dir + "content.htm", "w", encoding="utf-8") as f:\n            f.write("<h1>head 1</h1>content 1")\n    subject = file_get_contents(config_dir+"content.htm")\n    # deal with content without content\n    if subject == "":\n        # create content.htm if there is no content.htm\n        with open(config_dir + "content.htm", "w", encoding="utf-8") as f:\n            f.write("<h1>head 1</h1>content 1")\n        subject = "<h1>head 1</h1>content 1"\n    # initialize the return lists\n    head_list = []\n    level_list = []\n    page_list = []\n    # make the soup out of the html content\n    soup = bs4.BeautifulSoup(subject, \'html.parser\')\n    # 嘗試解讀各種情況下的標題\n    soup = _remove_h123_attrs(soup)\n    # 改寫 content.htm 後重新取 subject\n    with open(config_dir + "content.htm", "wb") as f:\n        f.write(soup.encode("utf-8"))\n    subject = file_get_contents(config_dir+"content.htm")\n    # get all h1, h2, h3 tags into list\n    htag= soup.find_all([\'h1\', \'h2\', \'h3\'])\n    n = len(htag)\n    # get the page content to split subject using each h tag\n    temp_data = subject.split(str(htag[0]))\n    if len(temp_data) > 2:\n        subject = str(htag[0]).join(temp_data[1:])\n    else:\n        subject = temp_data[1]\n    if n >1:\n            # i from 1 to i-1\n            for i in range(1, len(htag)):\n                head_list.append(htag[i-1].text.strip())\n                # use name attribute of h* tag to get h1, h2 or h3\n                # the number of h1, h2 or h3 is the level of page menu\n                level_list.append(htag[i-1].name[1])\n                temp_data = subject.split(str(htag[i]))\n                if len(temp_data) > 2:\n                    subject = str(htag[i]).join(temp_data[1:])\n                else:\n                    subject = temp_data[1]\n                # cut the other page content out of htag from 1 to i-1\n                cut = temp_data[0]\n                # add the page content\n                page_list.append(cut)\n    # last i\n    # add the last page title\n    head_list.append(htag[n-1].text.strip())\n    # add the last level\n    level_list.append(htag[n-1].name[1])\n    temp_data = subject.split(str(htag[n-1]))\n    # the last subject\n    subject = temp_data[0]\n    # cut the last page content out\n    cut = temp_data[0]\n    # the last page content\n    page_list.append(cut)\n    return head_list, level_list, page_list\n\ndef render_menu(head, level, page, sitemap=0):\n    \'\'\'允許使用者在 h1 標題後直接加上 h3 標題, 或者隨後納入 h4 之後作為標題標註\'\'\'\n    directory = ""\n    # 從 level 數列第一個元素作為開端\n    current_level = level[0]\n    # 若是 sitemap 則僅列出樹狀架構而沒有套用 css3menu 架構\n    if sitemap:\n        directory += "<ul>"\n    else:\n        directory += "<ul id=\'css3menu1\' class=\'topmenu\'>"\n    # 逐一配合 level 數列中的各標題階次, 一一建立對應的表單或 sitemap\n    for index in range(len(head)):\n        # 用 this_level 取出迴圈中逐一處理的頁面對應層級, 注意取出值為 str\n        this_level = level[index]\n        # 若處理中的層級比上一層級高超過一層, 則將處理層級升級 (處理 h1 後直接接 h3 情況)\n        if (int(this_level) - int(current_level)) > 1:\n            #this_level = str(int(this_level) - 1)\n            # 考慮若納入 h4 也作為標題標註, 相鄰層級可能大於一層, 因此直接用上一層級 + 1\n            this_level = str(int(current_level) + 1)\n        # 若處理的階次比目前已經處理的階次大, 表示位階較低\n        # 其實當 level[0] 完全不會報告此一區塊\n        # 從正在處理的標題階次與前一個元素比對, 若階次低, 則要加入另一區段的 unordered list 標頭\n        # 兩者皆為 str 會轉為整數後比較\n        if this_level > current_level:\n            directory += "<ul>"\n            directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n        # 假如正在處理的標題與前一個元素同位階, 則必須再判定是否為另一個 h1 的樹狀頭\n        elif this_level == current_level:\n            # 若正在處理的標題確實為樹狀頭, 則標上樹狀頭開始標註\n            if this_level == 1:\n                # 這裡還是需要判定是在建立 sitemap 模式或者選單模式\n                if sitemap:\n                    directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index]+"</a>"\n                else:\n                    directory += "<li class=\'topmenu\'><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n            #  假如不是樹狀頭, 則只列出對應的 list\n            else:\n                directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n        # 假如正處理的元素比上一個元素位階更高, 必須要先關掉前面的低位階區段\n        else:\n            directory += "</li>"*(int(current_level) - int(level[index]))\n            directory += "</ul>"*(int(current_level) - int(level[index]))\n            if this_level == 1:\n                if sitemap:\n                    directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n                else:\n                    directory += "<li class=\'topmenu\'><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n            else:\n                directory += "<li><a href=\'/get_page/" + head[index] + "\'>" + head[index] + "</a>"\n        current_level = this_level\n    directory += "</li></ul>"\n    return directory\ndef render_menu2(head, level, page, sitemap=0):\n    """render menu for static site"""\n    directory = ""\n    current_level = level[0]\n    if sitemap:\n        directory += "<ul>"\n    else:\n        # before add tipue search function\n        #directory += "<ul id=\'css3menu1\' class=\'topmenu\'>"\n        directory += "<ul id=\'css3menu1\' class=\'topmenu\'><div class=\\"tipue_search_group\\"><input style=\\"width: 6vw;\\" type=\\"text\\" name=\\"q\\" id=\\"tipue_search_input\\" pattern=\\".{2,}\\" title=\\"Press enter key to search\\" required></div>"\n    for index in range(len(head)):\n        this_level = level[index]\n        # 若處理中的層級比上一層級高超過一層, 則將處理層級升級 (處理 h1 後直接接 h3 情況)\n        if (int(this_level) - int(current_level)) > 1:\n            #this_level = str(int(this_level) - 1)\n            this_level = str(int(current_level) + 1)\n        if this_level > current_level:\n            directory += "<ul>"\n            #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n            # 改為連結到 content/標題.html\n            directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        elif this_level == current_level:\n            if this_level == 1:\n                if sitemap:\n                    # 改為連結到 content/標題.html\n                    #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                    directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n                else:\n                    #directory += "<li class=\'topmenu\'><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                    directory += "<li class=\'topmenu\'><a href=\'content/" + head[index] + ".html\'>" + head[index] + "</a>"\n            else:\n                #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        else:\n            directory += "</li>"*(int(current_level) - int(level[index]))\n            directory += "</ul>"*(int(current_level) - int(level[index]))\n            if this_level == 1:\n                if sitemap:\n                    #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                    directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n                else:\n                    #directory += "<li class=\'topmenu\'><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                    directory += "<li class=\'topmenu\'><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n            else:\n                #directory += "<li><a href=\'/get_page/"+head[index]+"\'>"+head[index]+"</a>"\n                directory += "<li><a href=\'" + head[index] + ".html\'>" + head[index] + "</a>"\n        current_level = this_level\n    directory += "</li></ul>"\n    return directory\n@app.route(\'/saveConfig\', methods=[\'POST\'])\ndef saveConfig():\n    if not isAdmin():\n        return redirect("/login")\n    site_title = request.form[\'site_title\']\n    password = request.form[\'password\']\n    password2 = request.form[\'password2\']\n    if site_title is None or password is None:\n        return error_log("no content to save!")\n    old_site_title, old_password = parse_config()\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    if site_title is None or password is None or password2 != old_password or password == \'\':\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                directory + "</nav><section><h1>Error!</h1><a href=\'/\'>Home</a></body></html>"\n    else:\n        if password == password2 and password == old_password:\n            hashed_password = old_password\n        else:\n            hashed_password = hashlib.sha512(password.encode(\'utf-8\')).hexdigest()\n        file = open(config_dir + "config", "w", encoding="utf-8")\n        file.write("siteTitle:" + site_title + "\\npassword:" + hashed_password)\n        file.close()\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>config file saved</h1><a href=\'/\'>Home</a></body></html>"\n\n\n@app.route(\'/savePage\', methods=[\'POST\'])\ndef savePage():\n    """save all pages function"""\n    page_content = request.form[\'page_content\']\n    page_content = [w.replace(\'// <![CDATA[\', \'\') for w in page_content]\n    page_content = [w.replace(\'// ]]>\', \'\') for w in page_content]\n    # check if administrator\n    if not isAdmin():\n        return redirect("/login")\n    if page_content is None:\n        return error_log("no content to save!")\n    # 在插入新頁面資料前, 先複製 content.htm 一分到 content_backup.htm\n    shutil.copy2(config_dir + "content.htm", config_dir + "content_backup.htm")\n    # in Windows client operator, to avoid textarea add extra \\n\n    page_content = page_content.replace("\\n","")\n    with open(config_dir + "content.htm", "w", encoding="utf-8") as f:\n        f.write(page_content)\n    return redirect("/edit_page")\n\n\n# use head title to search page content\n\'\'\'\n# search_content(head, page, search)\n# 從 head 與 page 數列中, 以 search 關鍵字進行查詢\n# 原先傳回與 search 關鍵字頁面對應的頁面內容\n# 現在則傳回多重的頁面次序與頁面內容數列\nfind = lambda searchList, elem: [[i for i, x in enumerate(searchList) if x == e] for e in elem]\nhead = ["標題一","標題二","標題三","標題一","標題四","標題五"]\nsearch_result = find(head,["標題一"])[0]\npage_order = []\npage_content = []\nfor i in range(len(search_result)):\n    # 印出次序\n    page_order.append(search_result[i])\n    # 標題為 head[search_result[i]]\n    #  頁面內容則為 page[search_result[i]]\n    page_content.append(page[search_result[i]])\n    # 從 page[次序] 印出頁面內容\n# 準備傳回 page_order 與 page_content 等兩個數列\n\'\'\'\n\n\ndef search_content(head, page, search):\n    """search content"""\n    \'\'\' 舊內容\n    return page[head.index(search)]\n    \'\'\'\n    find = lambda searchList, elem: [[i for i, x in enumerate(searchList) if x == e] for e in elem]\n    search_result = find(head, [search])[0]\n    page_order = []\n    page_content = []\n    for i in range(len(search_result)):\n        # 印出次序\n        page_order.append(search_result[i])\n        # 標題為 head[search_result[i]]\n        #  頁面內容則為 page[search_result[i]]\n        page_content.append(page[search_result[i]])\n        # 從 page[次序] 印出頁面內容\n    # 準備傳回 page_order 與 page_content 等兩個數列\n    return page_order, page_content\n\n\n@app.route(\'/search_form\', defaults={\'edit\': 1})\n@app.route(\'/search_form/<path:edit>\')\ndef search_form(edit):\n    """form of keyword search"""\n    if isAdmin():\n        head, level, page = parse_content()\n        directory = render_menu(head, level, page)\n        return set_css() + "<div class=\'container\'><nav>" + \\\n                 directory + "</nav><section><h1>Search</h1> \\\n                 <form method=\'post\' action=\'doSearch\'> \\\n                 keywords:<input type=\'text\' name=\'keyword\'> \\\n                 <input type=\'submit\' value=\'search\'></form> \\\n                 </section></div></body></html>"\n    else:\n        return redirect("/login")\n\n\n# setup static directory\n@app.route(\'/static/<path:path>\')\ndef send_file(path):\n    """send file function"""\n    return app.send_static_file(static_dir + path)\n\n\n# setup static directory\n#@app.route(\'/images/<path:path>\')\n@app.route(\'/images/<path:path>\')\ndef send_images(path):\n    """send image files"""\n    return send_from_directory(_curdir + "/images/", path)\n\n\n# setup static directory\n@app.route(\'/static/\')\ndef send_static():\n    """send static files"""\n    return app.send_static_file(\'index.html\')\n\n\n# set_admin_css for administrator\ndef set_admin_css():\n    """set css for admin"""\n    outstring = \'\'\'<!doctype html>\n<html><head>\n<meta http-equiv="content-type" content="text/html;charset=utf-8">\n<title>\'\'\' + init.Init.site_title + \'\'\'</title> \\\n<link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n\'\'\' + syntaxhighlight()\n\n    outstring += \'\'\'\n<script src="./../static/jquery.js"></script>\n<script type="text/javascript">\n$(function(){\n    $("ul.topmenu> li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n    $("ul.topmenu > li ul li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n});\n</script>\n\'\'\'\n    # SSL for uwsgi operation\n    if uwsgi:\n        outstring += \'\'\'\n<script type="text/javascript">\nif ((location.href.search(/http:/) != -1) && (location.href.search(/login/) != -1)) \\\nwindow.location= \'https://\' + location.host + location.pathname + location.search;\n</script>\n\'\'\'\n    site_title, password = parse_config()\n    outstring += \'\'\'\n</head><header><h1>\'\'\' + site_title + \'\'\'</h1> \\\n<confmenu>\n<ul>\n<li><a href="/">Home</a></li>\n<li><a href="/sitemap">SiteMap</a></li>\n<li><a href="/edit_page">Edit All</a></li>\n<li><a href="\'\'\' + str(request.url) + \'\'\'/1">Edit</a></li>\n<li><a href="/edit_config">Config</a></li>\n<li><a href="/search_form">Search</a></li>\n<li><a href="/imageuploadform">Image Upload</a></li>\n<li><a href="/image_list">Image List</a></li>\n<li><a href="/fileuploadform">File Upload</a></li>\n<li><a href="/download_list">File List</a></li>\n<li><a href="/logout">Logout</a></li>\n<li><a href="/generate_pages">generate_pages</a></li>\n\'\'\'\n    outstring += \'\'\'\n</ul>\n</confmenu></header>\n\'\'\'\n    return outstring\n\n\ndef set_css():\n    """set css for dynamic site"""\n    outstring = \'\'\'<!doctype html>\n<html><head>\n<meta http-equiv="content-type" content="text/html;charset=utf-8">\n<title>\'\'\' + init.Init.site_title + \'\'\'</title> \\\n<link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n\'\'\' + syntaxhighlight()\n\n    outstring += \'\'\'\n<script src="./../static/jquery.js"></script>\n<script type="text/javascript">\n$(function(){\n    $("ul.topmenu> li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n    $("ul.topmenu > li ul li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n});\n</script>\n\'\'\'\n    if uwsgi:\n        outstring += \'\'\'\n<script type="text/javascript">\nif ((location.href.search(/http:/) != -1) && (location.href.search(/login/) != -1)) \\\nwindow.location= \'https://\' + location.host + location.pathname + location.search;\n</script>\n\'\'\'\n    site_title, password = parse_config()\n    outstring += \'\'\'\n</head><header><h1>\'\'\' + site_title + \'\'\'</h1> \\\n<confmenu>\n<ul>\n<li><a href="/">Home</a></li>\n<li><a href="/sitemap">Site Map</a></li>\n\'\'\'\n    if isAdmin():\n        outstring += \'\'\'\n<li><a href="/edit_page">Edit All</a></li>\n<li><a href="\'\'\' + str(request.url) + \'\'\'/1">Edit</a></li>\n<li><a href="/edit_config">Config</a></li>\n<li><a href="/search_form">Search</a></li>\n<li><a href="/imageuploadform">image upload</a></li>\n<li><a href="/image_list">image list</a></li>\n<li><a href="/fileuploadform">file upload</a></li>\n<li><a href="/download_list">file list</a></li>\n<li><a href="/logout">logout</a></li>\n<li><a href="/generate_pages">generate_pages</a></li>\n\'\'\'\n    else:\n        outstring += \'\'\'\n<li><a href="/login">login</a></li>\n\'\'\'\n    outstring += \'\'\'\n</ul>\n</confmenu></header>\n\'\'\'\n    return outstring\n\n\ndef set_css2():\n    """set css for static site"""\n    outstring = \'\'\'<!doctype html>\n<html><head>\n<meta http-equiv="content-type" content="text/html;charset=utf-8">\n<title>\'\'\' + init.Init.site_title + \'\'\'</title> \\\n<link rel="stylesheet" type="text/css" href="./../static/cmsimply.css">\n<script src="tipuesearch_content.js"></script>\n<script src="./../static/jquery.js"></script>\n<link rel="stylesheet" href="./../static/tipuesearch/css/tipuesearch.css">\n<script src="./../static/tipuesearch/tipuesearch_set.js"></script>\n<script src="./../static/tipuesearch/tipuesearch.min.js"></script>\n\'\'\' + syntaxhighlight2()\n\n    outstring += \'\'\'\n<script type="text/javascript">\n/*shorthand of $(document).ready(function(){};); */\n$(function(){\n    $("ul.topmenu> li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n    $("ul.topmenu > li ul li:has(ul) > a").append(\'<div class="arrow-right"></div>\');\n});\nfunction doSearch() {\n     $(\'#tipue_search_input\').tipuesearch({\n        newWindow: true, minimumLength: 2\n     });\n}\n$(document).ready(doSearch);\n</script>\n\'\'\'\n    if uwsgi:\n        outstring += \'\'\'\n<script type="text/javascript">\nif ((location.href.search(/http:/) != -1) && (location.href.search(/login/) != -1)) \\\nwindow.location= \'https://\' + location.host + location.pathname + location.search;\n</script>\n\'\'\'\n    site_title, password = parse_config()\n    outstring += \'\'\'\n</head><header><h1>\'\'\' + site_title + \'\'\'</h1> \\\n<confmenu>\n<ul>\n<li><a href="index.html">Home</a></li>\n<li><a href="sitemap.html">Site Map</a></li>\n<li><a href="./../reveal/index.html">reveal</a></li>\n<li><a href="./../blog/index.html">blog</a></li>\n\'\'\'\n    outstring += \'\'\'\n</ul>\n</confmenu></header>\n\'\'\'\n    return outstring\n\n\ndef set_footer():\n    """footer for page"""\n    return "<footer> \\\n        <a href=\'/edit_page\'>Edit All</a>| \\\n        <a href=\'" + str(request.url) + "/1\'>Edit</a>| \\\n        <a href=\'edit_config\'>Config</a> \\\n        <a href=\'login\'>login</a>| \\\n        <a href=\'logout\'>logout</a> \\\n        <br />Powered by <a href=\'http://cmsimple.cycu.org\'>CMSimply</a> \\\n        </footer> \\\n        </body></html>"\n@app.route(\'/sitemap\', defaults={\'edit\': 1})\n@app.route(\'/sitemap/<path:edit>\')\ndef sitemap(edit):\n    """sitemap for dynamic site"""\n    head, level, page = parse_content()\n    directory = render_menu(head, level, page)\n    sitemap = render_menu(head, level, page, sitemap=1)\n    return set_css() + "<div class=\'container\'><nav>" + directory + \\\n             "</nav><section><h1>Site Map</h1>" + sitemap + \\\n             "</section></div></body></html>"\ndef sitemap2(head):\n    """sitemap for static content generation"""\n    edit = 0\n    not_used_head, level, page = parse_content()\n    directory = render_menu2(head, level, page)\n    sitemap = render_menu2(head, level, page, sitemap=1)\n    # add tipue search id\n    return set_css2() + "<div class=\'container\'><nav>" + directory + \\\n             "</nav><section><h1>Site Map</h1><div id=\\"tipue_search_content\\"></div>" + sitemap + \\\n             "</section></div></body></html>"\n\n\ndef sizeof_fmt(num):\n    """size formate"""\n    for x in [\'bytes\',\'KB\',\'MB\',\'GB\']:\n        if num < 1024.0:\n            return "%3.1f%s" % (num, x)\n        num /= 1024.0\n    return "%3.1f%s" % (num, \'TB\')\n@app.route(\'/ssavePage\', methods=[\'POST\'])\ndef ssavePage():\n    """seperate save page function"""\n    page_content = request.form[\'page_content\']\n    page_content = page_content.replace(\'// <![CDATA[\', \'\')\n    page_content = page_content.replace(\'// ]]>\', \'\')\n    page_order = request.form[\'page_order\']\n    if not isAdmin():\n        return redirect("/login")\n    if page_content is None:\n        return error_log("no content to save!")\n    # 請注意, 若啟用 fullpage plugin 這裡的 page_content tinymce4 會自動加上 html 頭尾標註\n    page_content = page_content.replace("\\n","")\n    head, level, page = parse_content()\n    original_head_title = head[int(page_order)]\n    # 在插入新頁面資料前, 先複製 content.htm 一分到 content_backup.htm\n    shutil.copy2(config_dir + "content.htm", config_dir + "content_backup.htm")\n    file = open(config_dir + "content.htm", "w", encoding="utf-8")\n    for index in range(len(head)):\n        if index == int(page_order):\n            file.write(page_content)\n        else:\n            file.write("<h"+str(level[index])+ ">" + str(head[index]) + "</h" + \\\n                          str(level[index])+">"+str(page[index]))\n    file.close()\n    # if every ssavePage generate_pages needed\n    #generate_pages()\n\n    # if head[int(page_order)] still existed and equal original_head_title, go back to origin edit status, otherwise go to "/"\n    # here the content is modified, we need to parse the new page_content again\n    head, level, page = parse_content()\n    # for debug\n    # print(original_head_title, head[int(page_order)])\n    # 嘗試避免因最後一個標題刪除儲存後產生 internal error 問題\n    if original_head_title is None:\n        return redirect("/")\n    if original_head_title == head[int(page_order)]:\n        #edit_url = "/get_page/" + urllib.parse.quote_plus(head[int(page_order)]) + "&edit=1"\n        #edit_url = "/get_page/" + urllib.parse.quote_plus(original_head_title) + "/1"\n        edit_url = "/get_page/" + original_head_title + "/1"\n        return redirect(edit_url)\n    else:\n        return redirect("/")\n\n\ndef syntaxhighlight():\n    return \'\'\'\n<script type="text/javascript" src="./../static/syntaxhighlighter/shCore.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushJScript.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushJava.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushPython.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushSql.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushXml.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushPhp.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushLua.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCpp.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCss.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCSharp.js"></script>\n<link type="text/css" rel="stylesheet" href="/static/syntaxhighlighter/css/shCoreDefault.css"/>\n<script type="text/javascript">SyntaxHighlighter.all();</script>\n\n<!-- for LaTeX equations 暫時不用\n    <script src="https://scrum-3.github.io/web/math/MathJax.js?config=TeX-MML-AM_CHTML" type="text/javascript"></script>\n    <script type="text/javascript">\n    init_mathjax = function() {\n        if (window.MathJax) {\n            // MathJax loaded\n            MathJax.Hub.Config({\n                tex2jax: {\n                    inlineMath: [ [\'$\',\'$\'], ["\\\\\\\\(","\\\\\\\\)"] ],\n                    displayMath: [ [\'$$\',\'$$\'], ["\\\\\\\\[","\\\\\\\\]"] ]\n                },\n                displayAlign: \'left\', // Change this to \'center\' to center equations.\n                "HTML-CSS": {\n                    styles: {\'.MathJax_Display\': {"margin": 0}}\n                }\n            });\n            MathJax.Hub.Queue(["Typeset",MathJax.Hub]);\n        }\n    }\n    init_mathjax();\n    </script>\n -->\n <!-- 暫時不用\n<script src="./../static/fengari-web.js"></script>\n<script type="text/javascript" src="./../static/Cango-13v08-min.js"></script>\n<script type="text/javascript" src="./../static/CangoAxes-4v01-min.js"></script>\n<script type="text/javascript" src="./../static/gearUtils-05.js"></script>\n-->\n<!-- for Brython 暫時不用\n<script src="https://scrum-3.github.io/web/brython/brython.js"></script>\n<script src="https://scrum-3.github.io/web/brython/brython_stdlib.js"></script>\n-->\n\'\'\'\n\n\n\ndef syntaxhighlight2():\n    return \'\'\'\n<script type="text/javascript" src="./../static/syntaxhighlighter/shCore.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushJScript.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushJava.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushPython.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushSql.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushXml.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushPhp.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushLua.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCpp.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCss.js"></script>\n<script type="text/javascript" src="./../static/syntaxhighlighter/shBrushCSharp.js"></script>\n<link type="text/css" rel="stylesheet" href="./../static/syntaxhighlighter/css/shCoreDefault.css"/>\n<script type="text/javascript">SyntaxHighlighter.all();</script>\n\n<!-- for LaTeX equations 暫時不用\n<script src="https://scrum-3.github.io/web/math/MathJax.js?config=TeX-MML-AM_CHTML" type="text/javascript"></script>\n<script type="text/javascript">\ninit_mathjax = function() {\n    if (window.MathJax) {\n        // MathJax loaded\n        MathJax.Hub.Config({\n            tex2jax: {\n                inlineMath: [ [\'$\',\'$\'], ["\\\\\\\\(","\\\\\\\\)"] ],\n                displayMath: [ [\'$$\',\'$$\'], ["\\\\\\\\[","\\\\\\\\]"] ]\n            },\n            displayAlign: \'left\', // Change this to \'center\' to center equations.\n            "HTML-CSS": {\n                styles: {\'.MathJax_Display\': {"margin": 0}}\n            }\n        });\n        MathJax.Hub.Queue(["Typeset",MathJax.Hub]);\n    }\n}\ninit_mathjax();\n</script>\n-->\n<!-- 暫時不用\n<script src="./../static/fengari-web.js"></script>\n<script type="text/javascript" src="./../static/Cango-13v08-min.js"></script>\n<script type="text/javascript" src="./../static/CangoAxes-4v01-min.js"></script>\n<script type="text/javascript" src="./../static/gearUtils-05.js"></script>\n-->\n<!-- for Brython 暫時不用\n<script src="https://scrum-3.github.io/web/brython/brython.js"></script>\n<script src="https://scrum-3.github.io/web/brython/brython_stdlib.js"></script>\n-->\n\'\'\'\n\n\ndef tinymce_editor(menu_input=None, editor_content=None, page_order=None):\n    sitecontent =file_get_contents(config_dir + "content.htm")\n    editor = set_admin_css() + editorhead() + \'\'\'</head>\'\'\' + editorfoot()\n    # edit all pages\n    if page_order is None:\n        outstring = editor + "<div class=\'container\'><nav>" + \\\n                        menu_input + "</nav><section><form method=\'post\' action=\'savePage\'> \\\n                        <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'>" +  \\\n                        editor_content + "</textarea><input type=\'submit\' value=\'save\'> \\\n                        </form></section></body></html>"\n    else:\n        # add viewpage button wilie single page editing\n        head, level, page = parse_content()\n        outstring = editor + "<div class=\'container\'><nav>" + \\\n                        menu_input+"</nav><section><form method=\'post\' action=\'/ssavePage\'> \\\n                        <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'>" + \\\n                        editor_content + "</textarea><input type=\'hidden\' name=\'page_order\' value=\'" + \\\n                        str(page_order) + "\'><input type=\'submit\' value=\'save\'>"\n        outstring += \'\'\'<input type=button onClick="location.href=\'/get_page/\'\'\' + \\\n                    head[page_order] + \\\n                    \'\'\'\'" value=\'viewpage\'></form></section></body></html>\'\'\'\n    return outstring\n\n\ndef unique(items):\n    """make items element unique"""\n    found = set([])\n    keep = []\n    count = {}\n    for item in items:\n        if item not in found:\n            count[item] = 0\n            found.add(item)\n            keep.append(item)\n        else:\n            count[item] += 1\n            keep.append(str(item) + "_" + str(count[item]))\n    return keep\n\n\nif __name__ == "__main__":\n    app.run()\n \n \n \n', 'tags': '', 'url': 'ROC flag.html'}, {'title': '網際內容管理課程內容', 'text': '因為w1到期中所教學的內容和w10到期末的教學內容有差異 \n w1~w9主要教學內容:github倉儲建立、CMSimfly網頁開發、配置、改版 \n w10~w16主要教學內容:虛擬主機安裝及設定、複習先前教學內容 \n 因此將內容主要分成幾個分支:1.w1~w9\xa0 \xa02.每個星期的教學內容 \n 期中報告及期末報告則會另外顯示 \n', 'tags': '', 'url': '網際內容管理課程內容.html'}, {'title': 'w1~w9', 'text': 'w1~w9主要教學內容:github倉儲建立、CMSimfly網頁開發、配置、改版 \n 除了ssh連線以及key設定另外拍成影片以外，其他建立倉儲、開啟動態網頁及改版，皆會拍成影片 \n', 'tags': '', 'url': 'w1~w9.html'}, {'title': 'PUSH及KEY設定', 'text': '關閉操作系統儲存 Github 帳號密碼設定 目前 KMOL 所使用的 PortableGIT, 內建設定的 credential helper 為 manger, 表示當使用者使用 git push 時內建會跳出讓使用者輸入帳號密碼的對話視窗, 以讓使用者輸入帳號密碼 我們可使用: git config --edit --system 指令 帶出 vi 編輯器, 編輯 git 指令所使用的系統設定, 只要將 credential 項目中的 helper = manager 刪除後儲存, 即可關閉內定將使用者 Github 帳號密碼儲存於操作系統的問題. \n 示範影片如下: \n \n \n 建立OPENSSH格式的KEY及設定 \n 在可攜系統的命令列視窗中, 以 sh 執行 Git 的 shell, 使用 ssh-keygen -t rsa -b 4096 -C "This is my key" 建立位於 y:\\home\\.ssh\\id_rsa 的 Private Key 與位於 y:\\home\\.ssh\\id_rsa.pub 的 Public Key, 並且將 id_rsa.pub 的內容, 轉貼到 Github 帳號 settings 中 SSH and GPG keys 項目內的 SSH Public Key 區. \n key成功建立以及設定之後，回到自己的github網站並在clone or download裡選擇USE SSH，複製後再可攜式系統裡進行git clone，待畫面顯示done即完成，之後將倉儲資料夾裡.ssh中的config檔案開啟，並將url選項改成ssh，即完成。 \n \n \n \n \n ssh 連線透過 proxy server, 必須設定 y:\\home\\.ssh\\config 如下: \n ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.kmol.info:3128 %h %p\n  \n# for user1\n# url = git@github.com_user1:user1/cmstest.git\nHost github.com_user1\n    User git\n    Port 22\n    Hostname github.com\n  \n    IdentityFile "y:\\home\\.ssh\\id_rsa_user1"\n  \n    TCPKeepAlive yes\n    IdentitiesOnly yes\n      \n# for user2\n# url = git@github.com_user2:user2/user2.com.git\nHost github.com_user2\n    Port 22\n    Hostname github.com\n  \n    IdentityFile "y:\\home\\.ssh\\id_rsa_user2"\n  \n    TCPKeepAlive yes\n    IdentitiesOnly yes \n 示範影片如下: \n \n', 'tags': '', 'url': 'PUSH及KEY設定.html'}, {'title': 'week_8', 'text': '電腦初學者的網際內容管理 \n week9網管期中影片部分即在講解下列步驟，對於下面步驟不理解可轉移至week9的內容觀看。 \n \n \n \n 第一步 網路連線設定 了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定. 正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定. 瀏覽器代理主機設定 了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定. 申請 Github 帳號 利用 Gmail 帳號申請 Github 帳號, 申請後利用電子郵箱收信進行確認後, 就可以在 Github 上建立倉儲. 第二步 配置可攜程式環境 取得 Windows 10 64 位元環境下的可攜程式環境 ( 下載\xa0 2019_cdb_w5.7z ), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟. 以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, 隨身碟必須在關閉所有應用程式執行下, 才可正常退出. 了解基本的 DOS (Disk Operating System) 指令 C:\\> 符號為 DOS 命令列視窗的回應 (Prompt), 表示目前在 C 槽硬碟的 \\ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為 Y:\\> 若要更換目錄, 則使用 cd, 也就是 change directory 的意思, 例如: Y:\\>cd tmp 表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是 Y:\\tmp> 若要再回到 Y 槽的根目錄, 可以使用 cd .. 表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄. 另外, 無論目前位於哪一個子目錄, 也可以使用 cd \\ 直接回到根目錄. 或者從 Y:\\> 直接使用 cd \\tmp\\repo\\ssh\\wcm2019 直接從 Y 槽的根目錄, 跳進 Y:\\tmp\\repo\\ssh\\wcm2019> 此外, 常用的 DOS 指令有: dir - 列出目前所在目錄的內容 mkdir - 隨後加上要建立目錄的名稱, 可以建立目錄 cls - clear screen, 清除目前的命令列顯示的內容 第三步 建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版 可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令. 建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版. 另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端. git add git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容. git add 在 GIT 架構下, 是對所新增或修改的內容拍快照: \n git add . adds all modified and new (untracked) files in the current directory and all subdirectories to the staging area (a.k.a. the index), thus preparing them to be included in the next git commit . Any files matching the patterns in the .gitignore file will be ignored by git add \n git commit\xa0 git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間. 當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息. git push git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲. 第四步 自行建立靜態內容管理網站 利用 CMSimfly ( https://github.com/chiamingyen/cmsimfly )\xa0內容, 建立自己的 \xa0 Github Pages \xa0 網站 第五步 管理網站內容 學習如何使用 CMSimfly, 在網站中加入各種內容 第六步 使用 Flask, bs4 與 lxml 模組 了解 CMSimfly 如何建構, 並且嘗試修改現有功能, 除錯或建立自己的網際內容管理系統 \n \n 進階內容 第七步 虛擬主機下的類 Github 網站 如何利用 \xa0 Fossil SCM , 在 \xa0 Virtualbox \xa0 中的 \xa0 Ubuntu 18.04-2 \xa0(8.5 GB) 建立類似 Github 的系統, 可以放入 CMSimfly 的靜態網頁 第八步 實體主機下的網際內容管理 如何在實體主機上安裝 \xa0 Ubuntu \xa0 18.04 ( https://www.ubuntu.com/about/release-cycle ), 配置網路連線, 然後架構 \xa0 uwsgi \xa0 環境下的 CMSimfly 動態網站, 或建立 Fossil SCM 用來伺服管理 CMSimfly 下有版次管理的靜態網頁, 或利用 \xa0 nginx \xa0 伺服無版次管理的 CMSimfly 靜態網頁. \n', 'tags': '', 'url': 'week_8.html'}, {'title': 'week_10', 'text': '\n \n \n Virtualbox 虛擬主機網路設定 Not Attached 當使用者需要模擬虛擬主機的網路卡連接線被拔除的情況時, 可將該虛擬主機的網路卡以 Not Attached 模式設定. NAT 當使用者只需要讓虛擬主機能夠上網, 下載檔案或登入電子郵箱時, 可以將虛擬主機的網路卡以 NAT 模式設定. 在 NAT 模式下, 只有 ping 能夠運作, tracert 與其他與 ICMP 、VPN 或 PPTP 等協定對應的功能都將會失效. NAT\xa0 Network NAT Network 與 NAT 類似, 但使用者可以透過 File-Preferences-Network 新增多個 NAT Network, 並選擇所要使用的網段與 DHCP 或是否支援 IPv6 等設定. Bridged Adapter (在校主要使用選項) \n 在校確認連接到網路後，開啟控制台查看所連接網路的名稱，並在設定當中選擇正確的名稱。 當使用者需要利用虛擬主機建立與 Host 位階相同的網路模式時, 可以將虛擬主機的網卡設訂為 Bridged Adapter. Internal Network 當使用者需要讓虛擬主機設定為\xa0 https://en.wikipedia.org/wiki/Software-defined_networking \xa0時, 可以將網路卡設為可透過軟體調控的網路模式. Host-only Adapter 當使用者只需要讓虛擬主機與 Host 電腦連線時, 可以將網卡設為 Host-only Adapter, 此一模式的使用時機可以在虛擬主機中配置 WWW 伺服器、應用程式伺服器、Fossil SCM 伺服器, 然後透過 Host 上的瀏覽器進行連線測試, 或者在虛擬主機上安裝特定軟體套件的認證主機, 以便讓 Host 中的軟體套件透過虛擬主機執行授權認證. 參考 vdi: 位於雲端的 \xa0 Ubuntu 18.04_201904.vdi \xa0 (約 9 GB) - 已經配置 Fossil SCM: https 5443, Host-only: 192.168.56.2, https: 443 and 8843 for CMSimfly, Squid Proxy Server. 假如要利用 USB 隨身碟存放上述約 9 GB 的 Ubuntu 18.04 vdi 檔案, 必須將隨身碟格式化為 NTFS, 若採 Fat32 格式, 最大單一檔案必須小於 4 GB. 另外在近端有一類似的檔案, 可提供上課學員下載: http://wcmg1.kmol.info:88/ub1804_nox.vdi \xa0 (僅限近端用戶使用 IPv6 協定者下載) \n', 'tags': '', 'url': 'week_10.html'}, {'title': 'week_12', 'text': '本週內容: \n 透過整理內容來確認是否已經了解如何更新cmsimfly網頁以及改版 \n 並介紹從此週到期末主要教學方向 \n', 'tags': '', 'url': 'week_12.html'}, {'title': '網管課程任務', 'text': '期末報告類別 最後的期末報告主要分為下列兩項 \n \n 持續強化網際內容與系統的可用性(CMSimfly網頁) \n 深入了解網際內容管理系統的配置環境(VirtualBox) \n \n 持續強化網際內容與系統的可用 \n 將更多適合的內容嵌入個人cmsimfly網頁，並在最後的期末報告表達出來 \n 深入了解網際內容管理系統的配置環環境 \n 利用 Virtualbox 中的 Ubuntu 操作系統, 配置一套可以動態啟動的虛擬網際內容管理系統, 並學習如何在虛擬操作系統與實體操作系統中配置 CMSimfly 網際內容管理系統。 \n', 'tags': '', 'url': '網管課程任務.html'}, {'title': '網管課程整理', 'text': '2019 Spring 網際內容管理課程 1. 是否已經在自己的隨身碟建立隨身程式系統? 此一隨身系統以 \xa0 2019_cdb_w5.7z \xa0 為基礎, 使用者必須會自行查驗 \xa0 \xa0 是否已經將 portablegit 中的 helper = manager 的設定移除? \xa0 \xa0 \xa0python 是否已經安裝 flask, bs4 與 lxml 模組? \xa0 \xa0 (1)是否了解 git 以 https 連線時, proxy 將採用那一個檔案中的設定? \xa0 \xa0 (2)是否已經學會如何採用 ssh 模式維護 github 上的倉儲? \xa0 \xa0 (3)是否了解 CMSimfly 動態與靜態系統之間的關係? \xa0 \xa0 (4)是否會在 CMSimfly 中上傳檔案, 引用檔案? \xa0 \xa0 (5)是否會在 CMsimfly 中上傳圖檔, 引用圖檔? \xa0 \xa0 (6)是否會在 CMSimfly 中嵌入 Youtube 影片? \xa0 \xa0 (7)是否會在 CMSimfly 頁面中加入 Javascript 互動程式? \xa0 \xa0 (8)是否會更改 CMsimfly 靜態系統所使用的模板? \xa0 \xa0 (9)是否能將 USB 隨身碟格式為 NTFS 或 extFAT, 以便放入 Ubuntu 虛擬主機檔案? \xa0 \xa0 (10)是否會使用自己隨身碟中的 Virtualbox 與 Ubuntu 中的 Fossil SCM 來伺服靜態 CMSimfly 檔案? \xa0 \xa0 (11)是否會使用自己隨身碟中的 Virtualbox 與 Ubuntu 中的 uwsgi 來伺服動態 CMSimfly 系統? 2. 是否已經根據各上述階段任務的操作拍成說明影片, 嵌入自己的 Github Pages 網站? \n', 'tags': '', 'url': '網管課程整理.html'}, {'title': 'week_13', 'text': '本周內容:和同學們清楚說明w4-w13從創立github帳號、github Pages、網路設定、相關指令應用......等內容。相關內容將於本網頁的 近端配置與管理(網管) 頁面與大家介紹，感謝。 \n', 'tags': '', 'url': 'week_13.html'}, {'title': 'week_14', 'text': '本周內容:將 http://mde.tw/wcm2019/content/ROC%20flag.html 的國旗標誌加入自己的網頁 (已新增在分頁:ROC Flag) \n 注意事項: \n 5/21:因一開始更改flaskapp.py裡的內容更改完後會出現錯誤，所以必須將下列程式碼完整複製到flaskapp.py檔案並蓋過。 \n 5/22:發現push之後網頁顯示會跟原來不一樣，因此先改回了第一次修改的flaskapp.py檔案。 \n 5/24:詳細內容及第一次修改的flaskapp.py檔案程式碼放置在 國旗 分頁。 \n \n', 'tags': '', 'url': 'week_14.html'}, {'title': 'week_15', 'text': '本周內容: \n 1. TWAREN SSL-VPN連線安裝教學 \n 2.VirtualBox設定教學 \n 3.下載filezilla，將檔案傳送到虛擬主機資料夾。 \n 4.介紹可利用學校網站下載校園授權軟體(限校內ip) \n', 'tags': '', 'url': 'week_15.html'}, {'title': 'filezilla', 'text': 'filezilla功用:可經由連接到他台主機後傳送檔案至目標主機 \n https://portableapps.com/apps/internet/filezilla_portable \n 進入網頁後下載檔案並且進行安裝。 \n \n 在檔案-站台管理員-新增站台-利用ifconfig查詢虛擬主機的ip位置後將ip新增到主機空格內，並且輸入虛擬主機使用者名稱及密碼，點選連線後即完成。 \n \n', 'tags': '', 'url': 'filezilla.html'}, {'title': '校園授權軟體', 'text': '校園授權軟體下載專區(限校內IP) ，進入網站後登入校務帳號密碼，即可下載免費正版軟體。 \n \n', 'tags': '', 'url': '校園授權軟體.html'}, {'title': 'VirtualBox', 'text': '將virtualbox下載下來後開啟，並提前將ubuntu server下載好 \n ubuntu下載網址: https://www.ubuntu.com/download/server \n \n 虛擬主機系統建立 \n \n 將virtualbox開啟之後先進入設定更改網路連接方式， 以網路卡橋接進行連線 (下圖連接網路名稱為學校網路) \n \n 返回首頁並點選新增按鈕新增虛擬主機系統，類型選擇Linux，版本是Ubuntu。並完成其他設定。 \n \n \n 開啟虛擬主機完成設定 \n 可利用tab或是方向鍵下來控制項目，enter鍵來決定項目。 \n 依照上方指示完成後，只剩下虛擬主機系統內的設定。開啟新建立的系統並進行以下設定。 \n \n 以下輸入的proxy網址為當時在學校內所連到的主機伺服器位址。 \n 這裡輸入的資訊為之後設定完成將虛擬主機開啟後須進行登入的帳號密碼。 \n 設定完成後等待安裝成功即完成。 \n 啟動虛擬主機並且登入後 \n 1.利用指令 sudo apt install nginx  安裝 nginx WWW 伺服器 \n \n 2.\xa0利用 ifconfig 指令查詢 Ubuntu 伺服器的 IP,在網頁裡輸入網址，測試 nginx 伺服器是否可以連線 \n \n \n 3. \xa0開啟安裝好的filezilla client ，將編輯好的 nginx 設定檔案送到 Ubuntu \n \n', 'tags': '', 'url': 'VirtualBox.html'}, {'title': 'TWAREN SSL-VPN連線教學', 'text': '點擊 連結 後，選取與自己系統相容的檔案並下載。 \n \n 下載下來後執行並安裝 \n \n 在搜尋中輸入Network Connect並開啟 \n \n 輸入網址:https://sslvpn.nfu.edu.tw/nfu \n \n 輸入學號及校務行政密碼後登入 \n \n 點選是 \n \n 第三排第二個顯示已連線表示已成功連線。 \n \n \n 以下內容取自 https://nfucc.nfu.edu.tw/index.php/zh/download/download-network/ssl-vpn \n 2-2: IE網認證 \n \n 1.請在IE瀏覽器上按下右鍵 使用"以系統管理員身分執行" \n 登入頁面請輸入：\xa0 https://sslvpn9.twaren.net/nfu ，輸入校務行政帳號密碼 進行身份確認。 \n \n \n \n \n \n 2.點選「開始」\xa0 \n \n 3.點選「是」，SSL VPN程式安裝完畢後，就會開始跟你的電腦建立連線，請稍後一段時間。 \n \n \n \n \n \n \xa0 \n \n \xa0 5.\xa0 VPN 連線建立完成 \n \n 連線建立完成後，在電腦的工作列上(桌面右下角)，會出現 Juniper Network Connect VPN Client的圖示，表示VPN連線已經成功的建立在你的電腦上了。點擊圖示兩下，即可查看連線資訊。 (註:指派IP:一定為120.113.100.XX) 。 到此，您的SSL-VPN連線已經成功的建立，不管是在家裡還是出差，您的電腦就像在學校使用一般，您可以自由的使用虎尾科技大學自己擁有的網路資源。 \n \n \n \n 6.\xa0 連線IP檢視 (*) \n \n 如何得知連線的 IP 究竟是什麼呢？您可透過網際網路上提供 IP 位址偵測服務的網站進行確認，例如\xa0 http://showip.net/ \n \n \n', 'tags': '', 'url': 'TWAREN SSL-VPN連線教學.html'}, {'title': 'week_16', 'text': '本周內容: 1.利用虛擬主機開啟個人動態網站 \n 2.準備以及整理期末報告影片 \n', 'tags': '', 'url': 'week_16.html'}, {'title': '利用虛擬主機開啟動態網站', 'text': '下載 https://2019wcm.blogspot.com/ 中老師在w15內容裡新增的 W15 實作所完成的虛擬主機\xa0 vmdk 壓縮檔案 並下載下來 \n 在virtualbox裡新增一個虛擬主機，並在硬碟選擇裡選擇"使用現有虛擬硬碟檔案"-選擇安裝下來的w15虛擬檔案，建立完成後開啟(ub_50733141)。 \n 開啟並登入後，利用ifconfig查詢ip-開啟filezilla連線到虛擬主機後，將虛擬主機內 的"cms"檔案修改成自己倉儲內的檔案。 \n \n 完成後開啟瀏覽器，網址輸入: \n 個人靜態網頁-http://虛擬主機網址。即可利用虛擬主機開啟個人靜態網站 \n \n 個人動態網頁-https://虛擬主機網址。即可利用虛擬主機開啟個人動態網站 \n \n https://虛擬主機網址:5443。即可利用虛擬主機開啟fossil網站 \n \n', 'tags': '', 'url': '利用虛擬主機開啟動態網站.html'}, {'title': '2019_cdb_w5.w13', 'text': '2019_cdb_w5.7z 及 2019_cdb_w13.7z 兩個檔案下載下來解壓縮，並將自己倉儲資料嵌入後，皆可利用指令開啟動態網頁系統進行編輯，版本push之後，若是切換版本(w5-w13)開啟動態網頁進行改版，須先利用指令git pull讓內容進行同步，在開啟動態網頁，即可進行編輯。 \n', 'tags': '', 'url': '2019_cdb_w5.w13.html'}, {'title': '期中報告', 'text': '\n 學員期中報告影片錄製 \n (2019wcmj)學期初到期中上課內容 可利用網誌內容及youtube裡的示範影片進行操作 \n youtube搜尋:國立虎尾科技大學機械設計工程系 每周上課操作內容可以在youtube的頻道觀看 第1-8周主要教學網站:網際內容管理網誌、2019 Spring網際內容管理 \n 電腦初學者的網際內容管理(1-8周上課目標) \n 1.了解網路連線設定 \n 2.下載可攜式環境(2019_cdb_w5.7z) \n 3.建立github倉儲，並理解改版時指令的用意(git add .、git commit -m ""、git push) \n 4.利用CMSimfly內容，建立自己的Github Pages網站 \n 5.學習如何使用CMSimfly，在網站中加入內容，並進行改版 \n 示範如何開啟網站 開啟已下載完成的cd2019_cdb_w5資料夾並啟動 輸入cd tmp cd 2019wcmj python wsgi.py 複製網址並開啟即可進入自己的CMSimfly管理網頁 登入密碼:admin即可登入並且進行編輯 <產生亂數1-51>就是示範在網頁裡新增內容 透過輸入程式碼及文字可以新增內容 新增完內容後可點擊右上角選項generate_pages轉為靜態網頁 \n 並且牢記每次經過新增內容後必須利用指令進行改版(git add .、git commit -m ""、git push) 透過登入github可以看到自己的網頁過去改版新增的內容 \n', 'tags': '', 'url': '期中報告.html'}, {'title': '期末報告', 'text': 'w17、w18主要課程內容:將個人期末報告影片提交至youtube個人頻道，並嵌入個人動態網頁。 \n 學期內容歷程: \n 1.期初:介紹網際內容管理課程目標、上課時所會用到的相關網站( https://2019wcm.blogspot.com/ 、 https://github.com/ ) \n 2.建立Github倉儲以及相關設定(Key、SSH連線) \n 3.CMSimfly網頁配置、開發與操作 \n 以上為期初到期中課程內容 \n 4.利用不同的程式碼新增程式(ex:亂數產生系統、繪圖系統、國旗圖像) \n 5.VirtualBox虛擬主機安裝及設定 \n 6.介紹程式(filezilla、virtualbox)及網頁(校內授權軟體、VPN連線)的功能 \n', 'tags': '', 'url': '期末報告.html'}]};